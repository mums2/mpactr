[{"path":"https://mums2.github.io/mpactr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 mpactr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"load-required-libraries","dir":"Articles","previous_headings":"","what":"Load required libraries","title":"Downstream Analyses","text":"using multiple libraries data analysis visualization, can loaded . packages listed, can install install.packages(\"packagename\").","code":"library(mpactr) library(viridis) library(plotly) library(data.table) library(tidyverse) library(Hmisc) library(corrplot) library(ggdendro) library(ggtext)"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"filter-ms1-feature-table-with-mpactr","dir":"Articles","previous_headings":"","what":"Filter MS1 feature table with mpactr","title":"Downstream Analyses","text":"using example data mpactr package, 24 samples 8 biological groups. Biological groups : JC1, Media, JC28, ANGDT, ANG18, Coculture, Mixed_Monoculture, Solvent_Blank. check feature table mispicked ions, remove solvent blank media blanks features relative ion abundance > 0.01, relative groups, check ions replicability. Overall, 423 ions remain feature table. summary filtering, tree map :","code":"data <- import_data(example(\"cultures_peak_table.csv\"),   example(\"cultures_metadata.csv\"),   format = \"Progenesis\" ) data_filtered <- data |>   filter_mispicked_ions(merge_peaks = TRUE, merge_method = \"sum\") |>   filter_group(group_to_remove = \"Solvent_Blank\") |>   filter_group(group_to_remove = \"Media\") |>   filter_cv(cv_threshold = 0.2, cv_param = \"median\") #> ℹ Checking 1334 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 73 ions failed the mispicked filter, 1261 ions remain. #> ℹ Parsing 1261 peaks based on the sample group: Solvent_Blank. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Solvent_Blank. #> ✔ 25 ions failed the Solvent_Blank filter, 1236 ions remain. #> ℹ Parsing 1236 peaks based on the sample group: Media. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Media. #> ✔ 751 ions failed the Media filter, 485 ions remain. #> ℹ Parsing 485 peaks for replicability across technical replicates. #> ✔ 62 ions failed the cv_filter filter, 423 ions remain. plot_qc_tree(data_filtered)"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"interactive-scatter-plot-of-all-input-ions-and-their-fate-during-filtering","dir":"Articles","previous_headings":"","what":"Interactive scatter plot of all input ions and their fate during filtering","title":"Downstream Analyses","text":"Visualizing compound m/z retention time, fate filtering may useful see filters removing features certain retention time m/z ranges. create plot, first need extract raw data table, pre-filtered ions (including m/z retention time). can mpactr function get_raw_data(), select Compound, mz, rt columns. Next, need extract ion status mpactr function qc_summary(). function returns data.table reporting ion status input ion. includes filter ion failed passed, ion passed applied filters. can join two data.tables plotting data set: Now can create scatter plot show input features (m/z ~ retention time) fate (status) using ggolot geom_point.  can also make plot interactive plotly package function ggplotly.","code":"get_raw_data(data_filtered) %>%   select(Compound, mz, rt) %>%   head() #>    Compound       mz        rt #>       <num>    <num>     <num> #> 1:        1 256.0883 0.7748333 #> 2:        2 484.2921 0.7756667 #> 3:        3 445.2276 0.7786667 #> 4:        4 354.1842 0.7786667 #> 5:        5 353.1995 0.7816667 #> 6:        6 448.2945 0.7846667 qc_summary(data_filtered) %>%   head() #>    status compounds #>    <char>    <char> #> 1: Passed      1000 #> 2: Passed      1001 #> 3: Passed      1002 #> 4: Passed      1003 #> 5: Passed      1004 #> 6: Passed      1005 get_raw_data(data_filtered) %>%   mutate(Compound = as.character(Compound)) %>%   select(Compound, mz, rt) %>%   left_join(qc_summary(data_filtered),     by = join_by(\"Compound\" == \"compounds\")   ) %>%   head() #>    Compound       mz        rt      status #>      <char>    <num>     <num>      <char> #> 1:        1 256.0883 0.7748333 group-Media #> 2:        2 484.2921 0.7756667 group-Media #> 3:        3 445.2276 0.7786667 group-Media #> 4:        4 354.1842 0.7786667 group-Media #> 5:        5 353.1995 0.7816667 group-Media #> 6:        6 448.2945 0.7846667 group-Media get_raw_data(data_filtered) %>%   mutate(Compound = as.character(Compound)) %>%    select(Compound, mz, rt) %>%   left_join(qc_summary(data_filtered),     by = join_by(\"Compound\" == \"compounds\")   ) %>%   ggplot() +   aes(x = rt, y = mz, color = status) +   geom_point() +   viridis::scale_color_viridis(discrete = TRUE) +   labs(     x = \"Retention time (min)\",     y = \"m/z\",     color = \"Ion Status\"   ) +   theme_bw() +   theme(legend.position = \"top\") feature_plot <- get_raw_data(data_filtered) %>%   mutate(Compound = as.character(Compound)) %>%   select(Compound, mz, rt) %>%   left_join(qc_summary(data_filtered),     by = join_by(\"Compound\" == \"compounds\")   ) %>%   ggplot() +   aes(     x = rt, y = mz, color = status,     text = paste0(\"Compound: \", Compound)   ) +   geom_point() +   viridis::scale_color_viridis(discrete = TRUE) +   labs(     x = \"Retention time (min)\",     y = \"m/z\",     color = \"Ion Status\"   ) +   theme_bw() +   theme(legend.position = \"top\")  ggplotly(feature_plot)"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"correlation-between-samples-at-different-levels","dir":"Articles","previous_headings":"","what":"Correlation between samples at different levels","title":"Downstream Analyses","text":"may interested individual samples, biological groups correlate . analysis, need extract filtered feature table mpactr function get_peak_table(). function return filtered data.table rows features columns either compound metadata intensity values samples.","code":"ft <- get_peak_table(data_filtered)  ft[1:5, 1:7] #> Key: <Compound, mz, kmd, rt> #>    Compound       mz     kmd       rt 102423_Blank_77_1_5095 #>      <char>    <num>   <num>    <num>                  <num> #> 1:     1000 278.0638 0.06382 5.522833                      0 #> 2:     1001 296.0736 0.07365 5.524667                      0 #> 3:     1002 222.0751 0.07512 5.523333                      0 #> 4:     1003 210.0771 0.07706 5.521500                      0 #> 5:     1004 614.1282 0.12818 5.526167                      0 #>    102423_Blank_77_2_5096 102423_Blank_77_3_5097 #>                     <num>                  <num> #> 1:                      0                      0 #> 2:                      0                      0 #> 3:                      0                      0 #> 4:                      0                      0 #> 5:                      0                      0"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"correlation-between-each-individual-sample","dir":"Articles","previous_headings":"Correlation between samples at different levels","what":"Correlation between each individual sample","title":"Downstream Analyses","text":"First, can look correlation individual sample, regardless technical replicates biological groups. show well technical biological replicates correlate, expecting see near perfect correlation replicates. use Hmisc::rcorr() perform spearman correlations. function expecting matrix columns samples correlate rows features. Since feature table columns feature metadata samples, need remove feature metadata rcorr(). can extracting sample names metadata Injection column, match sample column names feature table. also need remove samples longer features post-filtering (likely solvent blanks). Next can run correlation: counts_cor object list data correlations. correlation coefficients stored r slot, p-values p slot. can see correlations first sample Finally, can plot correlations map corrplot. Style options can customized liking (see corrplot).","code":"counts <- ft %>%   select(Compound, all_of(get_meta_data(data_filtered)$Injection)) %>%   column_to_rownames(var = \"Compound\") %>%   select(where(~ sum(.x) != 0))  counts[1:5, 1:2] #>      102623_UM1848B_JC1_69_1_5004 102623_UM1846B_Media_67_1_5005 #> 1000                            0                              0 #> 1001                            0                              0 #> 1002                            0                              0 #> 1003                            0                              0 #> 1004                            0                              0 counts_cor <- rcorr(as.matrix(counts), type = \"spearman\") counts_cor$r[, 1] #>       102623_UM1848B_JC1_69_1_5004     102623_UM1846B_Media_67_1_5005  #>                         1.00000000                         0.17541589  #>      102623_UM1847B_JC28_68_1_5006     102623_UM1850B_ANGDT_71_1_5007  #>                        -0.40190441                        -0.46544728  #>     102623_UM1849B_ANG18_70_1_5008 102623_UM1852B_Coculture_72_1_5009  #>                        -0.03971590                        -0.66162852  #>  102623_MixedMonoculture_84_1_5015       102623_UM1848B_JC1_69_1_5017  #>                         0.26791815                         0.98020218  #>     102623_UM1846B_Media_67_1_5018      102623_UM1847B_JC28_68_1_5019  #>                         0.17402775                        -0.40305906  #>     102623_UM1850B_ANGDT_71_1_5020     102623_UM1849B_ANG18_70_1_5021  #>                        -0.46660263                        -0.03989960  #> 102623_UM1852B_Coculture_72_1_5022  102623_MixedMonoculture_84_1_5028  #>                        -0.65976408                         0.26407704  #>       102623_UM1848B_JC1_69_1_5030     102623_UM1846B_Media_67_1_5031  #>                         0.97770847                         0.17541193  #>      102623_UM1847B_JC28_68_1_5032     102623_UM1850B_ANGDT_71_1_5033  #>                        -0.40190659                        -0.46138695  #>     102623_UM1849B_ANG18_70_1_5034 102623_UM1852B_Coculture_72_1_5035  #>                        -0.01196953                        -0.66541048  #>  102623_MixedMonoculture_84_1_5041  #>                         0.25869973 corrplot(counts_cor$r,   type = \"lower\",   method = \"square\",   order = \"hclust\",   col = COL2(\"BrBG\", 10),   tl.col = \"black\",   tl.cex = .5 )"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"correlation-between-technical-replicates","dir":"Articles","previous_headings":"Correlation between samples at different levels","what":"Correlation between technical replicates","title":"Downstream Analyses","text":"Next, can look correlation technical replicates see compare across dataset. , calculate average intensity compound across technical replicates run correlation manner shown . original counts table, set row names column Compound, holds compound id. need reset Compound column pivot data table calculating averages. Next, join sample meta data can calcuate averages Sample_Code. Now can calculate mean intensity Compound Sample_Code. Finally, need reformat table columns sample codes correlation. Run correlation: finally visualize:","code":"meta <- get_meta_data(data_filtered)  counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   head() #> # A tibble: 6 × 3 #>   Compound Injection                          Intensity #>   <chr>    <chr>                                  <dbl> #> 1 1000     102623_UM1848B_JC1_69_1_5004              0  #> 2 1000     102623_UM1846B_Media_67_1_5005            0  #> 3 1000     102623_UM1847B_JC28_68_1_5006        183612. #> 4 1000     102623_UM1850B_ANGDT_71_1_5007         3680. #> 5 1000     102623_UM1849B_ANG18_70_1_5008            0  #> 6 1000     102623_UM1852B_Coculture_72_1_5009        0 counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   left_join(meta, by = \"Injection\") %>%   head() #> # A tibble: 6 × 6 #>   Compound Injection             Intensity Sample_Code Biological_Group dilution #>   <chr>    <chr>                     <dbl> <chr>       <chr>               <dbl> #> 1 1000     102623_UM1848B_JC1_6…        0  UM1848B     JC1                     1 #> 2 1000     102623_UM1846B_Media…        0  UM1846B     Media                   1 #> 3 1000     102623_UM1847B_JC28_…   183612. UM1847B     JC28                    1 #> 4 1000     102623_UM1850B_ANGDT…     3680. UM1850B     ANGDT                   1 #> 5 1000     102623_UM1849B_ANG18…        0  UM1849B     ANG18                   1 #> 6 1000     102623_UM1852B_Cocul…        0  UM1852B     Coculture               1 counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   left_join(meta, by = \"Injection\") %>%   summarise(     mean_intensity = mean(Intensity),     .by = c(Compound, Sample_Code)   ) %>%   head() #> # A tibble: 6 × 3 #>   Compound Sample_Code mean_intensity #>   <chr>    <chr>                <dbl> #> 1 1000     UM1848B                 0  #> 2 1000     UM1846B                 0  #> 3 1000     UM1847B            182682. #> 4 1000     UM1850B              3762. #> 5 1000     UM1849B                 0  #> 6 1000     UM1852B                 0 sample_counts <- counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   left_join(meta, by = \"Injection\") %>%   summarise(     mean_intensity = mean(Intensity),     .by = c(Compound, Sample_Code)   ) %>%   pivot_wider(     names_from = Sample_Code,     values_from = mean_intensity   ) %>%   column_to_rownames(var = \"Compound\")  sample_counts[1:5, 1:5] #>      UM1848B UM1846B   UM1847B  UM1850B UM1849B #> 1000       0       0 182681.78 3762.133       0 #> 1001       0       0  69643.45 6540.170       0 #> 1002       0       0  25588.00 3730.070       0 #> 1003       0       0  10424.57    0.000       0 #> 1004       0       0  23216.59 1724.140       0 sample_counts_cor <- rcorr(as.matrix(sample_counts), type = \"spearman\") corrplot(sample_counts_cor$r,   type = \"lower\",   method = \"square\",   order = \"alphabet\",   col = COL2(\"BrBG\", 10),   tl.col = \"black\" )"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"correlation-between-biological-replicates","dir":"Articles","previous_headings":"Correlation between samples at different levels","what":"Correlation between biological replicates","title":"Downstream Analyses","text":"can also look correlation biological groups. dataset, technical replicates biological groups ; however multiple technical replicates may also interested correlation biological groups. calculate mean intensity values Biological_Group manner Sample_Code. Run correlation analysis rcorr(): Visualize correlation:  expected, biological group correlation matrix matches technical replicates correlation.","code":"group_counts <- counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   left_join(meta, by = \"Injection\") %>%   summarise(     mean_intensity = mean(Intensity),     .by = c(Compound, Biological_Group)   ) %>%   pivot_wider(     names_from = Biological_Group,     values_from = mean_intensity   ) %>%   column_to_rownames(var = \"Compound\") group_counts_cor <- rcorr(as.matrix(group_counts), type = \"spearman\") corrplot(group_counts_cor$r,   type = \"lower\",   method = \"square\",   order = \"alphabet\",   col = COL2(\"BrBG\", 10),   tl.col = \"black\" )"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"dendrogram","dir":"Articles","previous_headings":"","what":"Dendrogram","title":"Downstream Analyses","text":"may interested visualizing similar samples dendrogram. need calculate distance samples stats::dist(), cluster hclust(), visualize ggplot ggdendro packages. First, calculate distance cluster: Calculate dendrogram components stats::.dendrogram(): Extract plotting elements ggdendrogram::dendro_data() Use ggplot ggdendrogram plot dendrogram. customizations, see ggdendro documentation.","code":"dist <- stats::dist(t(counts), method = \"euclidian\") cluster <- stats::hclust(dist, method = \"complete\") dendro <- as.dendrogram(cluster) den_data <- dendro_data(dendro, type = \"rectangle\") ggplot(segment(den_data)) +   geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +   geom_text(     data = den_data$labels,     aes(x = x, y = y, label = label),     size = 3,     hjust = \"outward\"   ) +   coord_cartesian(ylim = c((min(segment(den_data)$y) + 10),                            (max(segment(den_data)$y)))) +   coord_flip() +   scale_y_reverse(expand = c(.5, 0)) +   theme_dendro() #> Coordinate system already present. #> ℹ Adding new coordinate system, which will replace the existing one."},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"fold-change-analysis","dir":"Articles","previous_headings":"","what":"Fold change analysis","title":"Downstream Analyses","text":"Say wanted compare metabolite profiles Coculture ANG18 groups. can extract group means filtered compounds using mpactr function get_group_averages(), isolate groups interest, Coculture ANG18 monocoluture, calculate compound fold change.","code":""},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"calculate-fold-change","dir":"Articles","previous_headings":"Fold change analysis","what":"Calculate fold change","title":"Downstream Analyses","text":"Inherently, tandem MS/MS datasets can filled many zeros. instances compound found experimental group control group, vice versa. cases, fold change calculation yields infinite number zero either numerator denominator (foldchage=experimental/controlfold chage = experimental / control). also chance compound found either group, yielding fold change NaN (0/0). Compounds either group interest comparison can therefore removed analysis. multiple ways handle compounds found one group . create pseudo-counts adding small number (0.001) counts prior calculating fold change. alleviate division 0. First, extract group averages mpactr object select two groups interest. interested columns Coculture ANG18: calculate fold change, need two columns: one control group, ANG18, one experimental group, Coculture: Now create pseudo-counts adding 0.001 counts column: Now can remove compounds intensity 0 groups. equates pseuo-count 0.001: Next, calculate fold change remaining compounds: Finally, transform fold change log2:","code":"get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |            Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(fc = Coculture / ANG18) %>%   head() #> # A tibble: 6 × 4 #>   Compound ANG18 Coculture    fc #>   <chr>    <dbl>     <dbl> <dbl> #> 1 1000         0         0   NaN #> 2 1001         0         0   NaN #> 3 1002         0         0   NaN #> 4 1003         0         0   NaN #> 5 1004         0         0   NaN #> 6 1005         0         0   NaN get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |            Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(nonzero_compound = if_else(Coculture == 0 & ANG18 == 0,                                     FALSE,                                     TRUE)) %>%   filter(nonzero_compound == TRUE) %>%   mutate(fc = Coculture / ANG18) %>%   head() #> # A tibble: 6 × 5 #>   Compound ANG18 Coculture nonzero_compound    fc #>   <chr>    <dbl>     <dbl> <lgl>            <dbl> #> 1 1007        0      8929. TRUE               Inf #> 2 1024        0     11317. TRUE               Inf #> 3 103         0      5152. TRUE               Inf #> 4 1039     1145.        0  TRUE                 0 #> 5 1040      669.        0  TRUE                 0 #> 6 105         0     16501. TRUE               Inf get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |            Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   head() #>    Compound Biological_Group average #>      <char>           <char>   <num> #> 1:     1000            ANG18       0 #> 2:     1000        Coculture       0 #> 3:     1001            ANG18       0 #> 4:     1001        Coculture       0 #> 5:     1002            ANG18       0 #> 6:     1002        Coculture       0 get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |            Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   head() #>    Compound Biological_Group average #>      <char>           <char>   <num> #> 1:     1000            ANG18       0 #> 2:     1000        Coculture       0 #> 3:     1001            ANG18       0 #> 4:     1001        Coculture       0 #> 5:     1002            ANG18       0 #> 6:     1002        Coculture       0 get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |            Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   mutate(average = average + 0.001) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   head() #> # A tibble: 6 × 3 #>   Compound ANG18 Coculture #>   <chr>    <dbl>     <dbl> #> 1 1000     0.001     0.001 #> 2 1001     0.001     0.001 #> 3 1002     0.001     0.001 #> 4 1003     0.001     0.001 #> 5 1004     0.001     0.001 #> 6 1005     0.001     0.001 get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |            Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   mutate(average = average + 0.001) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(nonzero_compound = if_else(Coculture == 0.001 & ANG18 == 0.001,                                     FALSE,                                     TRUE)) %>%   filter(nonzero_compound == TRUE) %>%   head() #> # A tibble: 6 × 4 #>   Compound    ANG18 Coculture nonzero_compound #>   <chr>       <dbl>     <dbl> <lgl>            #> 1 1007        0.001  8929.    TRUE             #> 2 1024        0.001 11317.    TRUE             #> 3 103         0.001  5152.    TRUE             #> 4 1039     1145.        0.001 TRUE             #> 5 1040      669.        0.001 TRUE             #> 6 105         0.001 16501.    TRUE get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |            Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   mutate(average = average + 0.001) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(nonzero_compound = if_else(Coculture == 0.001 & ANG18 == 0.001,                                     FALSE,                                     TRUE)) %>%   filter(nonzero_compound == TRUE) %>%   mutate(fc = Coculture / ANG18) %>%   head() #> # A tibble: 6 × 5 #>   Compound    ANG18 Coculture nonzero_compound      fc #>   <chr>       <dbl>     <dbl> <lgl>              <dbl> #> 1 1007        0.001  8929.    TRUE             8.93e+6 #> 2 1024        0.001 11317.    TRUE             1.13e+7 #> 3 103         0.001  5152.    TRUE             5.15e+6 #> 4 1039     1145.        0.001 TRUE             8.73e-7 #> 5 1040      669.        0.001 TRUE             1.49e-6 #> 6 105         0.001 16501.    TRUE             1.65e+7 foldchanges <- get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |            Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   mutate(average = average + 0.001) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(nonzero_compound = if_else(Coculture == 0.001 & ANG18 == 0.001,                                     FALSE,                                     TRUE)) %>%   filter(nonzero_compound == TRUE) %>%   mutate(fc = Coculture / ANG18,          logfc = log2(fc))  head(foldchanges) #> # A tibble: 6 × 6 #>   Compound    ANG18 Coculture nonzero_compound      fc logfc #>   <chr>       <dbl>     <dbl> <lgl>              <dbl> <dbl> #> 1 1007        0.001  8929.    TRUE             8.93e+6  23.1 #> 2 1024        0.001 11317.    TRUE             1.13e+7  23.4 #> 3 103         0.001  5152.    TRUE             5.15e+6  22.3 #> 4 1039     1145.        0.001 TRUE             8.73e-7 -20.1 #> 5 1040      669.        0.001 TRUE             1.49e-6 -19.4 #> 6 105         0.001 16501.    TRUE             1.65e+7  24.0"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"visualize-fold-change-for-compounds-in-a-3d-scatter-plot","dir":"Articles","previous_headings":"Fold change analysis","what":"Visualize fold change for compounds in a 3D scatter plot","title":"Downstream Analyses","text":"can probe compounds plotting 3D scatter plot log2 fold changes function m/z retention time:","code":"fc_plotting <- foldchanges %>%   left_join(select(ft, Compound, mz, rt), by = \"Compound\")  plot_ly(fc_plotting,   x = ~logfc, y = ~rt, z = ~mz,   marker = list(color = ~logfc, showscale = TRUE) ) %>%   add_markers() %>%   layout(     scene = list(       xaxis = list(title = \"log2 Fold Change\"),       yaxis = list(title = \"Retention Time (min)\"),       zaxis = list(title = \"m/z\")     ),     annotations = list(       x = 1.13,       y = 1.05,       text = \"log2 Fold Change\",       xref = \"paper\",       yref = \"paper\",       showarrow = FALSE     )   )"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"test-for-compounds-with-significant-fold-changes","dir":"Articles","previous_headings":"Fold change analysis","what":"Test for compounds with significant fold changes","title":"Downstream Analyses","text":"t-tests, already calculated variation compounds within biological groups well within technical replicates biological groups. can calculate t statistic degrees freedom use t distribution (pt()) calculate p-value. combine biological technical variation calculate sample size calculate t statistic calculate degrees freedom calculate p-value combine t-test results fold changes calculated","code":"# Satterwaite calc_samplesize_ws <- function(sd1, n1, sd2, n2) {   s1 <- sd1 / (n1^0.5)   s2 <- sd2 / (n2^0.5)    n <- (s1^2 / n1 + s2^2 / n2)^2   d1 <- s1^4 / ((n1^2) * (n1 - 1))   d2 <- s2^4 / ((n2^2) * (n2 - 1))    d1[which(!is.finite(d1))] <- 0   d2[which(!is.finite(d2))] <- 0    d <- d1 + d2    return(n / d) }  my_comp <- c(\"Coculture\", \"ANG18\")  stats <- get_group_averages(data_filtered) %>%   mutate(     combRSD = sqrt(techRSD^2 + BiolRSD^2),     combASD = combRSD * average,     combASD = if_else(is.na(combASD), 0, combASD),     BiolRSD = if_else(is.na(BiolRSD), 0, BiolRSD),     techRSD = if_else(is.na(techRSD), 0, techRSD),     neff = calc_samplesize_ws(techRSD, techn, BiolRSD, Bioln) + 1   ) %>%   filter(Biological_Group %in% my_comp)  head(stats) #>    Compound Biological_Group average BiolRSD Bioln techRSD techn combRSD #>      <char>           <char>   <num>   <num> <int>   <num> <num>   <num> #> 1:     1000            ANG18       0       0     3       0     3      NA #> 2:     1000        Coculture       0       0     3       0     3      NA #> 3:     1001            ANG18       0       0     3       0     3      NA #> 4:     1001        Coculture       0       0     3       0     3      NA #> 5:     1002            ANG18       0       0     3       0     3      NA #> 6:     1002        Coculture       0       0     3       0     3      NA #>    combASD  neff #>      <num> <num> #> 1:       0   NaN #> 2:       0   NaN #> 3:       0   NaN #> 4:       0   NaN #> 5:       0   NaN #> 6:       0   NaN denom <- stats %>%   summarise(den = combASD^2 / (neff),             .by = c(\"Compound\", \"Biological_Group\")) %>%   mutate(den = if_else(!is.finite(den), 0, den)) %>%   summarise(denom = sqrt(sum(den)), .by = c(\"Compound\"))  t_test <- stats %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(numerator = (Coculture - ANG18)) %>% # experimental - control   left_join(denom, by = \"Compound\") %>%   mutate(t = abs(numerator / denom))  head(t_test) #> # A tibble: 6 × 6 #>   Compound ANG18 Coculture numerator denom     t #>   <chr>    <dbl>     <dbl>     <dbl> <dbl> <dbl> #> 1 1000         0         0         0     0   NaN #> 2 1001         0         0         0     0   NaN #> 3 1002         0         0         0     0   NaN #> 4 1003         0         0         0     0   NaN #> 5 1004         0         0         0     0   NaN #> 6 1005         0         0         0     0   NaN df <- stats %>%   select(Compound, Biological_Group, neff) %>%   mutate(neff = if_else(!is.finite(neff), 0, neff)) %>%   pivot_wider(names_from = Biological_Group, values_from = neff) %>%   mutate(deg = Coculture + ANG18 - 2) %>%   select(Compound, deg)  head(df) #> # A tibble: 6 × 2 #>   Compound   deg #>   <chr>    <dbl> #> 1 1000        -2 #> 2 1001        -2 #> 3 1002        -2 #> 4 1003        -2 #> 5 1004        -2 #> 6 1005        -2 t <- t_test %>%   left_join(df, by = \"Compound\") %>%   mutate(     p = (1 - pt(t, deg)) * 2,     logp = log10(p),     neg_logp = -logp   ) %>%   select(Compound, t, deg, p, logp, neg_logp)  head(t) #> # A tibble: 6 × 6 #>   Compound     t   deg     p  logp neg_logp #>   <chr>    <dbl> <dbl> <dbl> <dbl>    <dbl> #> 1 1000       NaN    -2   NaN   NaN      NaN #> 2 1001       NaN    -2   NaN   NaN      NaN #> 3 1002       NaN    -2   NaN   NaN      NaN #> 4 1003       NaN    -2   NaN   NaN      NaN #> 5 1004       NaN    -2   NaN   NaN      NaN #> 6 1005       NaN    -2   NaN   NaN      NaN num_ions <- t %>%   filter(p <= 1) %>%   count() %>%   pull()  fc <- foldchanges %>%   left_join(t, by = \"Compound\") %>%   arrange(p) %>%   mutate(     qval = seq_len(length(p)),     qval = p * num_ions / qval   ) %>%   arrange(desc(p))  min_qval <- 1  for (i in seq_len(nrow(fc))) {   if (!is.finite(fc$qval[i])) {     next   }    if (fc$qval[i] < min_qval) {     min_qval <- fc$qval[i]   } else {     fc$qval[i] <- min_qval   } }  fc2 <- fc %>%   mutate(neg_logq = -log10(qval))"},{"path":"https://mums2.github.io/mpactr/articles/downstream_analyses.html","id":"volcano-plot","dir":"Articles","previous_headings":"Fold change analysis","what":"Volcano plot","title":"Downstream Analyses","text":"Now can create volcano plot see magnitude metabolite abundance differences Cocoulture ANG18 groups. can plot log2 fold change values log10 p-values log10 q-values, calculated t-tests . log2 fold change ~ log10 p-values base volcano plot scatter plot log2 fold changes x axis -log10 p-values y axis:  good, probably want know compounds p-value threshold outside log2 fold change threshold. Fold change threshold commonly ranges 1.5 - 2. plot, show p-value threshold 0.05 fold change threshold 1.5. First add horizontal line denote cutoff -log10 0.05:  Now can add vertical lines showing positive negative cutoffs log2 fold change:  now can see thresholds, ’s difficult make compounds significant fold change values. nice color compounds significance. Specifically, compounds whose intensity significantly higher experimental group, compounds whose intensity significantly lower experimental group, compounds significant p-values fold change fold change threshold, compounds whose fold change significant. can adding new variable dataset using variable color points. First, add new variable sig values Increased (fold change > 1.5 & pvalue < 0.05), Decreased (fold change < -1.5 & pvalue < 0.05), Inconclusive (fold change -1.5 - 1.5 & pvalue < 0.05), not_sig (pvalue > 0.05). Now can set color aesthetic variable sig select custom colors scale_color_manual():  Finally, adjust axis text titles liking:  can also make plot interactive, showing compound id point: log2 fold change ~ log10 q-values can also look volcano plot q value control false discovery rate (FDR) using approach shown p values:","code":"fc2 %>%   ggplot() +   aes(x = logfc, y = neg_logp) +   geom_point() +   labs(x = \"log2 Fold Change\",        y = \"-Log~10~ *P*\",        color = \"Differential Abundance\") +   theme_bw() #> Ignoring unknown labels: #> • colour : \"Differential Abundance\" fc2 %>%   ggplot() +   aes(x = logfc, y = neg_logp) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   labs(x = \"log2 Fold Change\",        y = \"-Log~10~ *P*\",        color = \"Differential Abundance\") +   theme_bw() #> Ignoring unknown labels: #> • colour : \"Differential Abundance\" fc2 %>%   ggplot() +   aes(x = logfc, y = neg_logp) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   labs(x = \"log2 Fold Change\",        y = \"-Log~10~ *P*\",        color = \"Differential Abundance\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   theme_bw() #> Ignoring unknown labels: #> • colour : \"Differential Abundance\" fc2 %>%   mutate(     sig = case_when(       p > 0.05 ~ \"not_sig\",       p <= 0.05 & logfc > log2(1.5) ~ \"Increased\",       p <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"),       labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not significant\")     )   ) %>%   select(Compound, ANG18, Coculture, fc, logfc, p, sig) %>%   head() #> # A tibble: 6 × 7 #>   Compound    ANG18 Coculture      fc   logfc     p sig             #>   <chr>       <dbl>     <dbl>   <dbl>   <dbl> <dbl> <fct>           #> 1 637      2174.     2022.    9.30e-1  -0.105 0.458 Not significant #> 2 1284        0.001   312.    3.12e+5  18.3   0.429 Not significant #> 3 856       130.        0.001 7.69e-6 -17.0   0.429 Not significant #> 4 1127     5164.        0.001 1.94e-7 -22.3   0.169 Not significant #> 5 667         0.001   619.    6.19e+5  19.2   0.167 Not significant #> 6 1302        0.001  2900.    2.90e+6  21.5   0.166 Not significant fc2 %>%   mutate(     sig = case_when(       p > 0.05 ~ \"not_sig\",       p <= 0.05 & logfc > log2(1.5) ~ \"Increased\",       p <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"),       labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not significant\")     )   ) %>%   ggplot() +   aes(x = logfc, y = neg_logp, color = sig) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   scale_color_manual(values = c(\"red\", \"blue\", \"grey\", \"black\")) +   labs(     x = \"log2 Fold Change\",     y = \"-Log~10~ *P*\",     color = \"Differential Abundance\"   ) +   theme_bw() fc2 %>%   mutate(     sig = case_when(       p > 0.05 ~ \"not_sig\",       p <= 0.05 & logfc > log2(1.5) ~ \"Increased\",       p <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"),       labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not significant\")     )   ) %>%   ggplot() +   aes(x = logfc, y = neg_logp, color = sig) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   scale_color_manual(values = c(\"red\", \"blue\", \"grey\", \"black\")) +   labs(     x = \"log2 Fold Change\",     y = \"-Log~10~ *P*\",     color = \"Differential Abundance\"   ) +   theme_bw() +   theme(     axis.title = element_markdown(size = 20),     axis.text = element_text(size = 15)   ) volcano <- fc2 %>%   mutate(     sig = case_when(       p > 0.05 ~ \"not_sig\",       p <= 0.05 & logfc > log2(1.5) ~ \"Increased\",       p <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"),       labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not significant\")     )   ) %>%   ggplot() +   aes(     x = logfc, y = neg_logp, color = sig,     text = paste0(\"Compound: \", Compound)   ) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   scale_color_manual(values = c(\"red\", \"blue\", \"grey\", \"black\")) +   labs(     x = \"log2 Fold Change\",     y = \"-Log~10~ *P*\",     color = \"Differential Abundance\"   ) +   theme_bw() +   theme(     axis.title = element_markdown(size = 20),     axis.text = element_text(size = 15)   )  ggplotly(volcano) fc2 %>%   mutate(     sig = case_when(       qval > 0.05 ~ \"not_sig\",       qval <= 0.05 & logfc > log2(1.5) ~ \"Increased\",       qval <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"),       labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not significant\")     )   ) %>%   ggplot() +   aes(x = logfc, y = neg_logq, color = sig) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   scale_color_manual(values = c(\"red\", \"blue\", \"grey\", \"black\")) +   labs(     x = \"log2 Fold Change\",     y = \"-Log~10~ q-value\",     color = \"Differential Abundance\"   ) +   theme_bw() +   theme(     axis.title = element_markdown(size = 20),     axis.text = element_text(size = 15)   )"},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"load-data-into-r","dir":"Articles","previous_headings":"","what":"Load data into R","title":"Filter","text":"mpactr requires 2 files input: feature table metadata file. expected comma separated files (.csv). peak_table: peak table Progenesis format expected. export compatable peak table Progenesis, navigate Review Compounds tab File -> Export Compound Measurements. Select following properties: Compound, m/z, Retention time (min), Raw abundance click ok. metadata: table sample information. minimum following columns expected: Injection, Sample_Code, Biological_Group. Injection sample name expected match sample column names peak_table. Sample_Code id technical replicate groups. Biological_Group id biological replicate groups. sample metadata can added, encouraged downstream analysis following filtering mpactr. import data R, use mpactr function import_data(), arguments: peak_table_file_path meta_data_file_path. Note - need use example() using files. package function allows access internal package data. simply want play around packge using example data, can run import_data function shown , otherwise, provide file paths files. function expecting files extension .csv. meta_data argument also accept R data.frame data.table object, assuming correct format. can useful need manually format existing metadata file, want extract metadata information peak table column names. create R6 class object, store peak table metadata. Calling new mpactr object print current peak table terminal:","code":"data <- import_data(example(\"cultures_peak_table.csv\"),   example(\"cultures_metadata.csv\"),   format = \"Progenesis\" ) data #>       Compound       mz         rt 102623_UM1848B_JC1_69_1_5004 #>         <char>    <num>      <num>                        <num> #>    1:        1 256.0883  0.7748333                         0.00 #>    2:        2 484.2921  0.7756667                       546.56 #>    3:        3 445.2276  0.7786667                         0.00 #>    4:        4 354.1842  0.7786667                         0.00 #>    5:        5 353.1995  0.7816667                         0.00 #>   ---                                                           #> 1330:     1330 538.3182 11.4396667                         0.00 #> 1331:     1331 424.2710 11.4315000                         0.00 #> 1332:     1332 422.1770 11.4568333                     10655.27 #> 1333:     1333 422.1776 11.4528333                       923.77 #> 1334:     1334 538.3981 11.4811667                      1176.19 #>       102623_UM1846B_Media_67_1_5005 102623_UM1847B_JC28_68_1_5006 #>                                <num>                         <num> #>    1:                           0.00                       5358.26 #>    2:                       16389.28                          0.00 #>    3:                       22515.28                          0.00 #>    4:                        6086.35                          0.00 #>    5:                        5923.96                          0.00 #>   ---                                                              #> 1330:                           0.00                      21222.45 #> 1331:                           0.00                      39842.07 #> 1332:                        5737.01                      33477.91 #> 1333:                           0.00                       6012.07 #> 1334:                        1353.96                      14792.94 #>       102623_UM1850B_ANGDT_71_1_5007 102623_UM1849B_ANG18_70_1_5008 #>                                <num>                          <num> #>    1:                        4131.40                        3398.08 #>    2:                           0.00                           0.00 #>    3:                           0.00                        1641.70 #>    4:                           0.00                           0.00 #>    5:                           0.00                           0.00 #>   ---                                                               #> 1330:                        5798.99                           0.00 #> 1331:                           0.00                       40318.68 #> 1332:                       28487.39                       11222.92 #> 1333:                        4634.47                        1250.37 #> 1334:                        3151.34                        1590.32 #>       102623_UM1852B_Coculture_72_1_5009 102623_MixedMonoculture_84_1_5015 #>                                    <num>                             <num> #>    1:                            5464.43                           3299.94 #>    2:                               0.00                              0.00 #>    3:                               0.00                              0.00 #>    4:                               0.00                              0.00 #>    5:                               0.00                              0.00 #>   ---                                                                      #> 1330:                           30536.02                           7732.14 #> 1331:                           26284.99                              0.00 #> 1332:                           20043.54                          20653.87 #> 1333:                            1112.28                           2910.70 #> 1334:                            1190.15                           5869.06 #>       102623_UM1848B_JC1_69_1_5017 102623_UM1846B_Media_67_1_5018 #>                              <num>                          <num> #>    1:                         0.00                        2168.71 #>    2:                         0.00                       20194.55 #>    3:                         0.00                       19457.70 #>    4:                         0.00                        5966.08 #>    5:                         0.00                        5674.10 #>   ---                                                             #> 1330:                         0.00                           0.00 #> 1331:                         0.00                           0.00 #> 1332:                     13961.88                        9107.94 #> 1333:                      1364.87                           0.00 #> 1334:                      1404.99                        1636.15 #>       102623_UM1847B_JC28_68_1_5019 102623_UM1850B_ANGDT_71_1_5020 #>                               <num>                          <num> #>    1:                       5505.94                        3762.47 #>    2:                          0.00                           0.00 #>    3:                          0.00                           0.00 #>    4:                          0.00                           0.00 #>    5:                          0.00                           0.00 #>   ---                                                              #> 1330:                      17782.36                        7420.76 #> 1331:                      37742.99                           0.00 #> 1332:                      30362.90                       28691.15 #> 1333:                       5510.67                        4081.40 #> 1334:                      15933.62                        2995.29 #>       102623_UM1849B_ANG18_70_1_5021 102623_UM1852B_Coculture_72_1_5022 #>                                <num>                              <num> #>    1:                        3424.76                            4890.84 #>    2:                           0.00                               0.00 #>    3:                           0.00                               0.00 #>    4:                           0.00                               0.00 #>    5:                           0.00                               0.00 #>   ---                                                                   #> 1330:                           0.00                           28742.16 #> 1331:                           0.00                           27778.21 #> 1332:                       11211.29                           18412.55 #> 1333:                        1096.25                               0.00 #> 1334:                        1350.04                            1429.84 #>       102623_MixedMonoculture_84_1_5028 102623_UM1848B_JC1_69_1_5030 #>                                   <num>                        <num> #>    1:                           2870.98                         0.00 #>    2:                              0.00                         0.00 #>    3:                            651.95                         0.00 #>    4:                              0.00                         0.00 #>    5:                              0.00                         0.00 #>   ---                                                                #> 1330:                           7830.13                         0.00 #> 1331:                          39217.34                     40432.41 #> 1332:                          20650.23                     15504.38 #> 1333:                           1604.38                      1643.83 #> 1334:                           5398.81                       982.25 #>       102623_UM1846B_Media_67_1_5031 102623_UM1847B_JC28_68_1_5032 #>                                <num>                         <num> #>    1:                        2033.65                       5522.76 #>    2:                       18650.07                          0.00 #>    3:                       19542.19                          0.00 #>    4:                        6755.31                          0.00 #>    5:                        5971.36                          0.00 #>   ---                                                              #> 1330:                           0.00                      18990.44 #> 1331:                       40989.54                      36259.55 #> 1332:                        8683.32                      29340.12 #> 1333:                           0.00                       5323.67 #> 1334:                        1791.72                      16808.92 #>       102623_UM1850B_ANGDT_71_1_5033 102623_UM1849B_ANG18_70_1_5034 #>                                <num>                          <num> #>    1:                        3446.13                        3621.36 #>    2:                           0.00                           0.00 #>    3:                           0.00                           0.00 #>    4:                           0.00                           0.00 #>    5:                           0.00                           0.00 #>   ---                                                               #> 1330:                        8203.37                           0.00 #> 1331:                           0.00                       38269.77 #> 1332:                       27768.08                       11750.24 #> 1333:                        4578.46                        1073.26 #> 1334:                        3039.45                        1120.35 #>       102623_UM1852B_Coculture_72_1_5035 102623_MixedMonoculture_84_1_5041 #>                                    <num>                             <num> #>    1:                            5051.84                           3028.24 #>    2:                               0.00                            399.02 #>    3:                               0.00                            664.81 #>    4:                               0.00                              0.00 #>    5:                               0.00                              0.00 #>   ---                                                                      #> 1330:                           29868.13                           8723.55 #> 1331:                           22049.76                          38174.90 #> 1332:                           18710.25                          21920.51 #> 1333:                               0.00                           1213.00 #> 1334:                            1306.39                           5012.83 #>       102423_Blank_77_1_5095 102423_Blank_77_2_5096 102423_Blank_77_3_5097 #>                        <num>                  <num>                  <num> #>    1:                   0.00                      0                   0.00 #>    2:                   0.00                      0                   0.00 #>    3:                   0.00                      0                   0.00 #>    4:                   0.00                      0                   0.00 #>    5:                   0.00                      0                   0.00 #>   ---                                                                      #> 1330:                   0.00                      0                   0.00 #> 1331:               20155.81                      0               35516.44 #> 1332:                   0.00                      0                   0.00 #> 1333:                   0.00                      0                   0.00 #> 1334:                   0.00                      0                   0.00 #>           kmd #>         <num> #>    1: 0.08831 #>    2: 0.29214 #>    3: 0.22763 #>    4: 0.18421 #>    5: 0.19945 #>   ---         #> 1330: 0.31820 #> 1331: 0.27097 #> 1332: 0.17696 #> 1333: 0.17758 #> 1334: 0.39806"},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"accessing-data-in-mpactr-object","dir":"Articles","previous_headings":"","what":"Accessing data in mpactr object","title":"Filter","text":"can extract peak table metadata point get_raw_data(), get_peak_table() get_meta_data() functions. functions return data.table object corresponding information.","code":""},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"extract-peak-table","dir":"Articles","previous_headings":"Accessing data in mpactr object","what":"Extract peak table","title":"Filter","text":"raw peak table unfiltered peak table used input mpactr. extract raw input peak table, use function get_raw_data(). raw peak table change filters applied data. want extract filtered peak table, filters applied, use get_peak_table():","code":"get_raw_data(data)[1:5, 1:8] #>    Compound       mz        rt 102623_UM1848B_JC1_69_1_5004 #>       <num>    <num>     <num>                        <num> #> 1:        1 256.0883 0.7748333                         0.00 #> 2:        2 484.2921 0.7756667                       546.56 #> 3:        3 445.2276 0.7786667                         0.00 #> 4:        4 354.1842 0.7786667                         0.00 #> 5:        5 353.1995 0.7816667                         0.00 #>    102623_UM1846B_Media_67_1_5005 102623_UM1847B_JC28_68_1_5006 #>                             <num>                         <num> #> 1:                           0.00                       5358.26 #> 2:                       16389.28                          0.00 #> 3:                       22515.28                          0.00 #> 4:                        6086.35                          0.00 #> 5:                        5923.96                          0.00 #>    102623_UM1850B_ANGDT_71_1_5007 102623_UM1849B_ANG18_70_1_5008 #>                             <num>                          <num> #> 1:                         4131.4                        3398.08 #> 2:                            0.0                           0.00 #> 3:                            0.0                        1641.70 #> 4:                            0.0                           0.00 #> 5:                            0.0                           0.00 get_peak_table(data)[1:5, 1:8] #>    Compound       mz        rt 102623_UM1848B_JC1_69_1_5004 #>      <char>    <num>     <num>                        <num> #> 1:        1 256.0883 0.7748333                         0.00 #> 2:        2 484.2921 0.7756667                       546.56 #> 3:        3 445.2276 0.7786667                         0.00 #> 4:        4 354.1842 0.7786667                         0.00 #> 5:        5 353.1995 0.7816667                         0.00 #>    102623_UM1846B_Media_67_1_5005 102623_UM1847B_JC28_68_1_5006 #>                             <num>                         <num> #> 1:                           0.00                       5358.26 #> 2:                       16389.28                          0.00 #> 3:                       22515.28                          0.00 #> 4:                        6086.35                          0.00 #> 5:                        5923.96                          0.00 #>    102623_UM1850B_ANGDT_71_1_5007 102623_UM1849B_ANG18_70_1_5008 #>                             <num>                          <num> #> 1:                         4131.4                        3398.08 #> 2:                            0.0                           0.00 #> 3:                            0.0                        1641.70 #> 4:                            0.0                           0.00 #> 5:                            0.0                           0.00"},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"extract-metadata","dir":"Articles","previous_headings":"Accessing data in mpactr object","what":"Extract metadata","title":"Filter","text":"","code":"get_meta_data(data)[1:5, ] #>                         Injection Sample_Code Biological_Group dilution #>                            <char>      <char>           <char>    <num> #> 1:   102623_UM1848B_JC1_69_1_5004     UM1848B              JC1        1 #> 2: 102623_UM1846B_Media_67_1_5005     UM1846B            Media        1 #> 3:  102623_UM1847B_JC28_68_1_5006     UM1847B             JC28        1 #> 4: 102623_UM1850B_ANGDT_71_1_5007     UM1850B            ANGDT        1 #> 5: 102623_UM1849B_ANG18_70_1_5008     UM1849B            ANG18        1"},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"reference-semantics","dir":"Articles","previous_headings":"","what":"Reference semantics","title":"Filter","text":"mpactr built R6 class-system, meaning operates reference semantics data updated -place. Compared shallow copy, data pointers copied, deep copy, entire data object copied memory, changes original data object, regardless assigned new object, result changes original data object. can see . raw data object 1334 ions feature table: can run filter_mispicked_ions filter, default setting copy_object = FALSE (operates reference semantics). results 1261 ions feature table (). Even though created object called data2_mispicked, original data2 object also updated now 1261 ions feature table: recommend using default copy_object = FALSE makes extremely fast memory-efficient way chain mpactr filters together (see Chaining filters together section Reference Semantics); however, like run filters individually traditional R style objects, can set copy_object TRUE shown filter examples.","code":"data2 <- import_data(example(\"cultures_peak_table.csv\"),   example(\"cultures_metadata.csv\"),   format = \"Progenesis\" )   get_peak_table(data2)[, 1:5] #>       Compound       mz         rt 102623_UM1848B_JC1_69_1_5004 #>         <char>    <num>      <num>                        <num> #>    1:        1 256.0883  0.7748333                         0.00 #>    2:        2 484.2921  0.7756667                       546.56 #>    3:        3 445.2276  0.7786667                         0.00 #>    4:        4 354.1842  0.7786667                         0.00 #>    5:        5 353.1995  0.7816667                         0.00 #>   ---                                                           #> 1330:     1330 538.3182 11.4396667                         0.00 #> 1331:     1331 424.2710 11.4315000                         0.00 #> 1332:     1332 422.1770 11.4568333                     10655.27 #> 1333:     1333 422.1776 11.4528333                       923.77 #> 1334:     1334 538.3981 11.4811667                      1176.19 #>       102623_UM1846B_Media_67_1_5005 #>                                <num> #>    1:                           0.00 #>    2:                       16389.28 #>    3:                       22515.28 #>    4:                        6086.35 #>    5:                        5923.96 #>   ---                                #> 1330:                           0.00 #> 1331:                           0.00 #> 1332:                        5737.01 #> 1333:                           0.00 #> 1334:                        1353.96 data2_mispicked <- filter_mispicked_ions(data2,   ringwin = 0.5,   isowin = 0.01, trwin = 0.005,   max_iso_shift = 3, merge_peaks = TRUE,   merge_method = \"sum\",   copy_object = FALSE ) #> ℹ Checking 1334 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 73 ions failed the mispicked filter, 1261 ions remain.  get_peak_table(data2_mispicked)[, 1:5] #> Key: <Compound, mz, kmd, rt> #>       Compound       mz     kmd        rt 102423_Blank_77_1_5095 #>         <char>    <num>   <num>     <num>                  <num> #>    1:        1 256.0883 0.08831 0.7748333                      0 #>    2:       10 340.2040 0.20399 0.7916667                      0 #>    3:      100 557.1519 0.15191 3.6925000                      0 #>    4:     1000 278.0638 0.06382 5.5228333                      0 #>    5:     1001 296.0736 0.07365 5.5246667                      0 #>   ---                                                            #> 1257:      995 561.2726 0.27255 5.4810000                      0 #> 1258:      996 228.1430 0.14305 5.4818333                      0 #> 1259:      997 425.1873 0.18726 5.4640000                      0 #> 1260:      998 337.1987 0.19873 5.4818333                      0 #> 1261:      999 640.3299 0.32993 5.4596667                      0 get_peak_table(data2)[, 1:5] #> Key: <Compound, mz, kmd, rt> #>       Compound       mz     kmd        rt 102423_Blank_77_1_5095 #>         <char>    <num>   <num>     <num>                  <num> #>    1:        1 256.0883 0.08831 0.7748333                      0 #>    2:       10 340.2040 0.20399 0.7916667                      0 #>    3:      100 557.1519 0.15191 3.6925000                      0 #>    4:     1000 278.0638 0.06382 5.5228333                      0 #>    5:     1001 296.0736 0.07365 5.5246667                      0 #>   ---                                                            #> 1257:      995 561.2726 0.27255 5.4810000                      0 #> 1258:      996 228.1430 0.14305 5.4818333                      0 #> 1259:      997 425.1873 0.18726 5.4640000                      0 #> 1260:      998 337.1987 0.19873 5.4818333                      0 #> 1261:      999 640.3299 0.32993 5.4596667                      0"},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"Filter","text":"mpactr provides filters correct following issues observed preprocessing tandem MS/MS data: mispicked ions: isotopic patterns incorrectly split preprocessing. solvent blank contamination: removal features present solvent blanks due carryover samples. background components: features whose abundance greater user-defined abundance threshold specific group samples, example media blanks. non-reproducible ions: inconsistent technical replicates. insource ions: fragment ions created ionization fragmentation tandem MS/MS workflow.","code":""},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"mispicked-ions-filter","dir":"Articles","previous_headings":"Filtering","what":"Mispicked ions filter","title":"Filter","text":"check mispicked ions, use mpactr function filter_mispicked_ions(). function takes mpactr object input, checks similar ions arguments ringwin, isowin, trwin max_iso_shift. Ions feature table flagged similar based retention time mass. Flagged ion groups suggested result incorrect splitting isotopic patterns peak picking, detector saturation artifacts, incorrect identification multiply charged oligomers. filter reports progress filtering, can see 1334 ions present prior checking mispicked ions. 73 ions found similar another ion following merging, 1261 ions remain. interested groups similar ions flagged filter, can use get_similar_ions(). function returns data.table reporting main ion (ion retained post-merging) ions similar .","code":"data_mispicked <- filter_mispicked_ions(data,   ringwin = 0.5,   isowin = 0.01, trwin = 0.005,   max_iso_shift = 3, merge_peaks = TRUE,   merge_method = \"sum\",   copy_object = TRUE ) #> ℹ Checking 1334 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 73 ions failed the mispicked filter, 1261 ions remain. head(get_similar_ions(data_mispicked)) #>    main_ion similar_ions #>      <char>       <list> #> 1:     1188         1189 #> 2:      939          945 #> 3:      898          896 #> 4:     1214         1210 #> 5:     1253         1249 #> 6:      886          884"},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"remove-ions-that-are-above-a-threshold-in-one-biological-group","dir":"Articles","previous_headings":"Filtering","what":"Remove ions that are above a threshold in one biological group","title":"Filter","text":"Removing solvent blank impurities important correcting -sample carryover contamination experimental samples. can identify remove ions mpactr’s filter_group() function. filter_group() identifies ions relative abundance threshold (group_threshold) specific group (group_to_remove). remove solvent blank impurities, set group_to_remove Biological_Group metadata file corresponds solvent blank samples, “Solvent_Blank”. example, 1334 ions present prior group filter. 26 ions found relative abundance threshold 0.01 “Solvent_Blank” samples, leaving 1308 ions peak table. can also use filter remove ions groups, media blanks. can useful experiments cell cultures. example data contains samples belonging Biological_Group “Media”. samples media blanks, negative controls growth experiments conducted study. can remove features whose abundance greater 1% largest group media blank samples specifying group_to_remove = “Media”. recommend removing media blank ions following filters high-quality ions identified (see Chaining filters together ).","code":"data_blank <- filter_group(data,   group_threshold = 0.01,   group_to_remove = \"Solvent_Blank\", remove_ions = TRUE,   copy_object = TRUE ) #> ℹ Parsing 1334 peaks based on the sample group: Solvent_Blank. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Solvent_Blank. #> ✔ 26 ions failed the Solvent_Blank filter, 1308 ions remain. data_media_blank <- filter_group(data,   group_threshold = 0.01,   group_to_remove = \"Media\", remove_ions = TRUE,   copy_object = TRUE ) #> ℹ Parsing 1334 peaks based on the sample group: Media. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Media. #> ✔ 824 ions failed the Media filter, 510 ions remain."},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"remove-non-reproducible-ions","dir":"Articles","previous_headings":"Filtering","what":"Remove non-reproducible ions","title":"Filter","text":"Ions whose abundance consisent technical replicates (.e., non-reproducible) may reliable analysis therefore removed feature table. Non-reproducible ions identified mean median coefficient variation (CV) technical replicates filter_cv(). Note - filter applied data contain technical replicates. example dataset, 241 ions flagged non-reproducible. ions removed, leaving 1093 ions feature table. like visualize CV threshold performed dataset, can extract CV calculated filer_cv() using mpactr’s get_cv_data() function, calculate percentage features plotting. can look mean median CV shown example , can filter data parameter choice. nested data tibbles columns Compound, cv, index, index_scale: one tibble parameter (either mean median). also want calculate percentage features represented CV threshold. can plot percentage features CV:  can see roughly 80% features CV threshold meaning 20% removed CV threshold 0.2.","code":"data_rep <- filter_cv(data,   cv_threshold = 0.2, cv_param = \"median\",   copy_object = TRUE ) #> ℹ Parsing 1334 peaks for replicability across technical replicates. #> ✔ 241 ions failed the cv_filter filter, 1093 ions remain. cv <- get_cv_data(data_rep) %>%   pivot_longer(cols = c(\"mean_cv\", \"median_cv\"),                names_to = \"param\",                values_to = \"cv\") %>%   nest(.by = param) %>%   mutate(     data = map(data, arrange, cv),     data = map(data, mutate, index = 0:(length(cv) - 1)),     data = map(data, mutate, index_scale = index * 100 / length(cv))   )  head(cv) #> # A tibble: 2 × 2 #>   param     data                 #>   <chr>     <list>               #> 1 mean_cv   <tibble [1,334 × 4]> #> 2 median_cv <tibble [1,334 × 4]> #> # A tibble: 6 × 4 #>   Compound      cv index index_scale #>   <chr>      <dbl> <int>       <dbl> #> 1 455      0.00500     0      0      #> 2 364      0.00720     1      0.0750 #> 3 409      0.00787     2      0.150  #> 4 435      0.00803     3      0.225  #> 5 1003     0.00887     4      0.300  #> 6 1117     0.0115      5      0.375 cv_thresh_percent <- cv %>%   filter(param == \"median_cv\") %>%   unnest(cols = data) %>%   mutate(diff_cv_thresh = abs(cv - 0.2)) %>%   slice_min(diff_cv_thresh, n = 1) %>%   pull(index_scale)  cv_thresh_percent #> [1] 81.85907 cv %>%   unnest(cols = data) %>%   mutate(param = factor(param, levels = c(\"mean_cv\", \"median_cv\"),                         labels = c(\"mean\", \"median\"))) %>%   ggplot() +   aes(x = cv, y = index_scale, group = param, color = param) +   geom_line(linewidth = 2) +   geom_vline(xintercept = 0.2,              color = \"darkgrey\",              linetype = \"dashed\",              linewidth = 1) +   geom_hline(yintercept = cv_thresh_percent,              color = \"darkgrey\",              linewidth = 1) +   labs(x = \"CV\",        y = \"Percentage of Features\",        param = \"Statistic\") +   theme_bw() +   theme(     axis.title = element_text(size = 20),     axis.text = element_text(size = 15),     legend.position = \"inside\",     legend.position.inside = c(.90, .08),     legend.title = element_blank(),     legend.text = element_text(size = 15)   ) #> Ignoring unknown labels: #> • param : \"Statistic\""},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"remove-insource-fragment-ions","dir":"Articles","previous_headings":"Filtering","what":"Remove insource fragment ions","title":"Filter","text":"mass species can fragmented ionization tandem MS/MS, creating insource ions. can result ions one compound represented feature table. like remove insource ions fragments, can mpactr’s filter_insource_ions(). filter_insource_ions() conducts ion deconvolution via retention time correlation matrices within MS1 scans. Highly correlated ion groups determined cluster_threshold parameter filtered remove low mass features. highest mass feature identified likely precursor ion retained feature table. 72 ions identified removed deconvolution dataset, leaving 1262 ions feature table.","code":"data_insource <- filter_insource_ions(data,   cluster_threshold = 0.95,   copy_object = TRUE ) #> ℹ Parsing 1334 peaks for insource ions. #> ✔ 72 ions failed the insource filter, 1262 ions remain."},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"chaining-filters-together","dir":"Articles","previous_headings":"Filtering","what":"Chaining filters together","title":"Filter","text":"Filters can chained customizable workflow, shown . filters can chained order, recommend filtering mispicked ions, solvent blanks, prior filtering non-repoducible insource ions. allow incorrectly picked peaks merged contamination/carryover removed prior identifying non-reproducible insource fragment ions. also demonstrate removal media blank components filter_group() function identification high-quality ions.","code":"data <- import_data(example(\"cultures_peak_table.csv\"),   example(\"cultures_metadata.csv\"),   format = \"Progenesis\" )  data_filtered <- filter_mispicked_ions(data, merge_method = \"sum\") |>   filter_group(group_to_remove = \"Solvent_Blank\") |>   filter_cv(cv_threshold = 0.2, cv_param = \"median\") |>   filter_group(group_to_remove = \"Media\")  #> ℹ Checking 1334 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 73 ions failed the mispicked filter, 1261 ions remain. #> ℹ Parsing 1261 peaks based on the sample group: Solvent_Blank. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Solvent_Blank. #> ✔ 25 ions failed the Solvent_Blank filter, 1236 ions remain. #> ℹ Parsing 1236 peaks for replicability across technical replicates. #> ✔ 214 ions failed the cv_filter filter, 1022 ions remain. #> ℹ Parsing 1022 peaks based on the sample group: Media. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Media. #> ✔ 599 ions failed the Media filter, 423 ions remain."},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Filter","text":"mpactr offers mutliple ways view summary data filtering.","code":""},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"view-passing-and-failed-ions-for-a-single-filter","dir":"Articles","previous_headings":"Summary","what":"View passing and failed ions for a single filter","title":"Filter","text":"interested viewing passing failing ions single filter, use filter_summary() function. must specify filter intested , either “mispicked”, “group”, “replicability”, “insource”. Failed ions: Passing ions: set filter filter name apply data, error message returned. want retrieve filter summary group filter, must also supply group name group argument: group must always supplied filter, even one group filter applied.","code":"mispicked_summary <- filter_summary(data_filtered, filter = \"mispicked\") mispicked_summary$failed_ions #>  [1] \"1189\" \"945\"  \"896\"  \"1210\" \"1249\" \"884\"  \"1060\" \"1008\" \"1304\" \"1271\" #> [11] \"1326\" \"1333\" \"937\"  \"1250\" \"1196\" \"1014\" \"895\"  \"1228\" \"817\"  \"853\"  #> [21] \"1122\" \"938\"  \"743\"  \"1145\" \"1021\" \"946\"  \"161\"  \"1032\" \"1033\" \"282\"  #> [31] \"154\"  \"779\"  \"1254\" \"1224\" \"260\"  \"264\"  \"18\"   \"1012\" \"800\"  \"1251\" #> [41] \"901\"  \"969\"  \"1259\" \"1223\" \"528\"  \"1095\" \"927\"  \"1242\" \"410\"  \"1260\" #> [51] \"427\"  \"1157\" \"1206\" \"393\"  \"1252\" \"1204\" \"975\"  \"584\"  \"1282\" \"1090\" #> [61] \"1257\" \"507\"  \"1087\" \"1153\" \"1261\" \"371\"  \"373\"  \"340\"  \"1267\" \"546\"  #> [71] \"495\"  \"1289\" \"1290\" head(mispicked_summary$passed_ions, 100) #>   [1] \"1\"    \"10\"   \"100\"  \"1000\" \"1001\" \"1002\" \"1003\" \"1004\" \"1005\" \"1006\" #>  [11] \"1007\" \"1009\" \"101\"  \"1010\" \"1011\" \"1013\" \"1015\" \"1016\" \"1017\" \"1018\" #>  [21] \"1019\" \"102\"  \"1020\" \"1022\" \"1023\" \"1024\" \"1025\" \"1026\" \"1027\" \"1028\" #>  [31] \"1029\" \"103\"  \"1030\" \"1031\" \"1034\" \"1035\" \"1036\" \"1037\" \"1038\" \"1039\" #>  [41] \"104\"  \"1040\" \"1041\" \"1042\" \"1043\" \"1044\" \"1045\" \"1046\" \"1047\" \"1048\" #>  [51] \"1049\" \"105\"  \"1050\" \"1051\" \"1052\" \"1053\" \"1054\" \"1055\" \"1056\" \"1057\" #>  [61] \"1058\" \"1059\" \"106\"  \"1061\" \"1062\" \"1063\" \"1064\" \"1065\" \"1066\" \"1067\" #>  [71] \"1068\" \"1069\" \"107\"  \"1070\" \"1071\" \"1072\" \"1073\" \"1074\" \"1075\" \"1076\" #>  [81] \"1077\" \"1078\" \"1079\" \"108\"  \"1080\" \"1081\" \"1082\" \"1083\" \"1084\" \"1085\" #>  [91] \"1086\" \"1088\" \"1089\" \"109\"  \"1091\" \"1092\" \"1093\" \"1094\" \"1096\" \"1097\" filter_summary(data_filtered, filter = \"insource\") #> Error in `mpactr_object$get_log()`: #> ! `filter` insource has not yet been applied to the data. Run the #>   corresponding filter function prior to extracting the summary. filter_summary(data_filtered, filter = \"group\", group = \"Solvent_Blank\") #> $failed_ions #>  [1] \"1275\" \"1324\" \"1325\" \"1330\" \"1331\" \"684\"  \"697\"  \"698\"  \"709\"  \"713\"  #> [11] \"714\"  \"717\"  \"720\"  \"725\"  \"730\"  \"731\"  \"735\"  \"736\"  \"737\"  \"740\"  #> [21] \"747\"  \"750\"  \"752\"  \"754\"  \"755\"  #>  #> $passed_ions #>    [1] \"1\"    \"10\"   \"100\"  \"1000\" \"1001\" \"1002\" \"1003\" \"1004\" \"1005\" \"1006\" #>   [11] \"1007\" \"1009\" \"101\"  \"1010\" \"1011\" \"1013\" \"1015\" \"1016\" \"1017\" \"1018\" #>   [21] \"1019\" \"102\"  \"1020\" \"1022\" \"1023\" \"1024\" \"1025\" \"1026\" \"1027\" \"1028\" #>   [31] \"1029\" \"103\"  \"1030\" \"1031\" \"1034\" \"1035\" \"1036\" \"1037\" \"1038\" \"1039\" #>   [41] \"104\"  \"1040\" \"1041\" \"1042\" \"1043\" \"1044\" \"1045\" \"1046\" \"1047\" \"1048\" #>   [51] \"1049\" \"105\"  \"1050\" \"1051\" \"1052\" \"1053\" \"1054\" \"1055\" \"1056\" \"1057\" #>   [61] \"1058\" \"1059\" \"106\"  \"1061\" \"1062\" \"1063\" \"1064\" \"1065\" \"1066\" \"1067\" #>   [71] \"1068\" \"1069\" \"107\"  \"1070\" \"1071\" \"1072\" \"1073\" \"1074\" \"1075\" \"1076\" #>   [81] \"1077\" \"1078\" \"1079\" \"108\"  \"1080\" \"1081\" \"1082\" \"1083\" \"1084\" \"1085\" #>   [91] \"1086\" \"1088\" \"1089\" \"109\"  \"1091\" \"1092\" \"1093\" \"1094\" \"1096\" \"1097\" #>  [101] \"1098\" \"1099\" \"11\"   \"110\"  \"1100\" \"1101\" \"1102\" \"1103\" \"1104\" \"1105\" #>  [111] \"1106\" \"1107\" \"1108\" \"1109\" \"111\"  \"1110\" \"1111\" \"1112\" \"1113\" \"1114\" #>  [121] \"1115\" \"1116\" \"1117\" \"1118\" \"1119\" \"112\"  \"1120\" \"1121\" \"1123\" \"1124\" #>  [131] \"1125\" \"1126\" \"1127\" \"1128\" \"1129\" \"113\"  \"1130\" \"1131\" \"1132\" \"1133\" #>  [141] \"1134\" \"1135\" \"1136\" \"1137\" \"1138\" \"1139\" \"114\"  \"1140\" \"1141\" \"1142\" #>  [151] \"1143\" \"1144\" \"1146\" \"1147\" \"1148\" \"1149\" \"115\"  \"1150\" \"1151\" \"1152\" #>  [161] \"1154\" \"1155\" \"1156\" \"1158\" \"1159\" \"116\"  \"1160\" \"1161\" \"1162\" \"1163\" #>  [171] \"1164\" \"1165\" \"1166\" \"1167\" \"1168\" \"1169\" \"117\"  \"1170\" \"1171\" \"1172\" #>  [181] \"1173\" \"1174\" \"1175\" \"1176\" \"1177\" \"1178\" \"1179\" \"118\"  \"1180\" \"1181\" #>  [191] \"1182\" \"1183\" \"1184\" \"1185\" \"1186\" \"1187\" \"1188\" \"119\"  \"1190\" \"1191\" #>  [201] \"1192\" \"1193\" \"1194\" \"1195\" \"1197\" \"1198\" \"1199\" \"12\"   \"120\"  \"1200\" #>  [211] \"1201\" \"1202\" \"1203\" \"1205\" \"1207\" \"1208\" \"1209\" \"121\"  \"1211\" \"1212\" #>  [221] \"1213\" \"1214\" \"1215\" \"1216\" \"1217\" \"1218\" \"1219\" \"122\"  \"1220\" \"1221\" #>  [231] \"1222\" \"1225\" \"1226\" \"1227\" \"1229\" \"123\"  \"1230\" \"1231\" \"1232\" \"1233\" #>  [241] \"1234\" \"1235\" \"1236\" \"1237\" \"1238\" \"1239\" \"124\"  \"1240\" \"1241\" \"1243\" #>  [251] \"1244\" \"1245\" \"1246\" \"1247\" \"1248\" \"125\"  \"1253\" \"1255\" \"1256\" \"1258\" #>  [261] \"126\"  \"1262\" \"1263\" \"1264\" \"1265\" \"1266\" \"1268\" \"1269\" \"127\"  \"1270\" #>  [271] \"1272\" \"1273\" \"1274\" \"1276\" \"1277\" \"1278\" \"1279\" \"128\"  \"1280\" \"1281\" #>  [281] \"1283\" \"1284\" \"1285\" \"1286\" \"1287\" \"1288\" \"129\"  \"1291\" \"1292\" \"1293\" #>  [291] \"1294\" \"1295\" \"1296\" \"1297\" \"1298\" \"1299\" \"13\"   \"130\"  \"1300\" \"1301\" #>  [301] \"1302\" \"1303\" \"1305\" \"1306\" \"1307\" \"1308\" \"1309\" \"131\"  \"1310\" \"1311\" #>  [311] \"1312\" \"1313\" \"1314\" \"1315\" \"1316\" \"1317\" \"1318\" \"1319\" \"132\"  \"1320\" #>  [321] \"1321\" \"1322\" \"1323\" \"1327\" \"1328\" \"1329\" \"133\"  \"1332\" \"1334\" \"134\"  #>  [331] \"135\"  \"136\"  \"137\"  \"138\"  \"139\"  \"14\"   \"140\"  \"141\"  \"142\"  \"143\"  #>  [341] \"144\"  \"145\"  \"146\"  \"147\"  \"148\"  \"149\"  \"15\"   \"150\"  \"151\"  \"152\"  #>  [351] \"153\"  \"155\"  \"156\"  \"157\"  \"158\"  \"159\"  \"16\"   \"160\"  \"162\"  \"163\"  #>  [361] \"164\"  \"165\"  \"166\"  \"167\"  \"168\"  \"169\"  \"17\"   \"170\"  \"171\"  \"172\"  #>  [371] \"173\"  \"174\"  \"175\"  \"176\"  \"177\"  \"178\"  \"179\"  \"180\"  \"181\"  \"182\"  #>  [381] \"183\"  \"184\"  \"185\"  \"186\"  \"187\"  \"188\"  \"189\"  \"19\"   \"190\"  \"191\"  #>  [391] \"192\"  \"193\"  \"194\"  \"195\"  \"196\"  \"197\"  \"198\"  \"199\"  \"2\"    \"20\"   #>  [401] \"200\"  \"201\"  \"202\"  \"203\"  \"204\"  \"205\"  \"206\"  \"207\"  \"208\"  \"209\"  #>  [411] \"21\"   \"210\"  \"211\"  \"212\"  \"213\"  \"214\"  \"215\"  \"216\"  \"217\"  \"218\"  #>  [421] \"219\"  \"22\"   \"220\"  \"221\"  \"222\"  \"223\"  \"224\"  \"225\"  \"226\"  \"227\"  #>  [431] \"228\"  \"229\"  \"23\"   \"230\"  \"231\"  \"232\"  \"233\"  \"234\"  \"235\"  \"236\"  #>  [441] \"237\"  \"238\"  \"239\"  \"24\"   \"240\"  \"241\"  \"242\"  \"243\"  \"244\"  \"245\"  #>  [451] \"246\"  \"247\"  \"248\"  \"249\"  \"25\"   \"250\"  \"251\"  \"252\"  \"253\"  \"254\"  #>  [461] \"255\"  \"256\"  \"257\"  \"258\"  \"259\"  \"26\"   \"261\"  \"262\"  \"263\"  \"265\"  #>  [471] \"266\"  \"267\"  \"268\"  \"269\"  \"27\"   \"270\"  \"271\"  \"272\"  \"273\"  \"274\"  #>  [481] \"275\"  \"276\"  \"277\"  \"278\"  \"279\"  \"28\"   \"280\"  \"281\"  \"283\"  \"284\"  #>  [491] \"285\"  \"286\"  \"287\"  \"288\"  \"289\"  \"29\"   \"290\"  \"291\"  \"292\"  \"293\"  #>  [501] \"294\"  \"295\"  \"296\"  \"297\"  \"298\"  \"299\"  \"3\"    \"30\"   \"300\"  \"301\"  #>  [511] \"302\"  \"303\"  \"304\"  \"305\"  \"306\"  \"307\"  \"308\"  \"309\"  \"31\"   \"310\"  #>  [521] \"311\"  \"312\"  \"313\"  \"314\"  \"315\"  \"316\"  \"317\"  \"318\"  \"319\"  \"32\"   #>  [531] \"320\"  \"321\"  \"322\"  \"323\"  \"324\"  \"325\"  \"326\"  \"327\"  \"328\"  \"329\"  #>  [541] \"33\"   \"330\"  \"331\"  \"332\"  \"333\"  \"334\"  \"335\"  \"336\"  \"337\"  \"338\"  #>  [551] \"339\"  \"34\"   \"341\"  \"342\"  \"343\"  \"344\"  \"345\"  \"346\"  \"347\"  \"348\"  #>  [561] \"349\"  \"35\"   \"350\"  \"351\"  \"352\"  \"353\"  \"354\"  \"355\"  \"356\"  \"357\"  #>  [571] \"358\"  \"359\"  \"36\"   \"360\"  \"361\"  \"362\"  \"363\"  \"364\"  \"365\"  \"366\"  #>  [581] \"367\"  \"368\"  \"369\"  \"37\"   \"370\"  \"372\"  \"374\"  \"375\"  \"376\"  \"377\"  #>  [591] \"378\"  \"379\"  \"38\"   \"380\"  \"381\"  \"382\"  \"383\"  \"384\"  \"385\"  \"386\"  #>  [601] \"387\"  \"388\"  \"389\"  \"39\"   \"390\"  \"391\"  \"392\"  \"394\"  \"395\"  \"396\"  #>  [611] \"397\"  \"398\"  \"399\"  \"4\"    \"40\"   \"400\"  \"401\"  \"402\"  \"403\"  \"404\"  #>  [621] \"405\"  \"406\"  \"407\"  \"408\"  \"409\"  \"41\"   \"411\"  \"412\"  \"413\"  \"414\"  #>  [631] \"415\"  \"416\"  \"417\"  \"418\"  \"419\"  \"42\"   \"420\"  \"421\"  \"422\"  \"423\"  #>  [641] \"424\"  \"425\"  \"426\"  \"428\"  \"429\"  \"43\"   \"430\"  \"431\"  \"432\"  \"433\"  #>  [651] \"434\"  \"435\"  \"436\"  \"437\"  \"438\"  \"439\"  \"44\"   \"440\"  \"441\"  \"442\"  #>  [661] \"443\"  \"444\"  \"445\"  \"446\"  \"447\"  \"448\"  \"449\"  \"45\"   \"450\"  \"451\"  #>  [671] \"452\"  \"453\"  \"454\"  \"455\"  \"456\"  \"457\"  \"458\"  \"459\"  \"46\"   \"460\"  #>  [681] \"461\"  \"462\"  \"463\"  \"464\"  \"465\"  \"466\"  \"467\"  \"468\"  \"469\"  \"47\"   #>  [691] \"470\"  \"471\"  \"472\"  \"473\"  \"474\"  \"475\"  \"476\"  \"477\"  \"478\"  \"479\"  #>  [701] \"48\"   \"480\"  \"481\"  \"482\"  \"483\"  \"484\"  \"485\"  \"486\"  \"487\"  \"488\"  #>  [711] \"489\"  \"49\"   \"490\"  \"491\"  \"492\"  \"493\"  \"494\"  \"496\"  \"497\"  \"498\"  #>  [721] \"499\"  \"5\"    \"50\"   \"500\"  \"501\"  \"502\"  \"503\"  \"504\"  \"505\"  \"506\"  #>  [731] \"508\"  \"509\"  \"51\"   \"510\"  \"511\"  \"512\"  \"513\"  \"514\"  \"515\"  \"516\"  #>  [741] \"517\"  \"518\"  \"519\"  \"52\"   \"520\"  \"521\"  \"522\"  \"523\"  \"524\"  \"525\"  #>  [751] \"526\"  \"527\"  \"529\"  \"53\"   \"530\"  \"531\"  \"532\"  \"533\"  \"534\"  \"535\"  #>  [761] \"536\"  \"537\"  \"538\"  \"539\"  \"54\"   \"540\"  \"541\"  \"542\"  \"543\"  \"544\"  #>  [771] \"545\"  \"547\"  \"548\"  \"549\"  \"55\"   \"550\"  \"551\"  \"552\"  \"553\"  \"554\"  #>  [781] \"555\"  \"556\"  \"557\"  \"558\"  \"559\"  \"56\"   \"560\"  \"561\"  \"562\"  \"563\"  #>  [791] \"564\"  \"565\"  \"566\"  \"567\"  \"568\"  \"569\"  \"57\"   \"570\"  \"571\"  \"572\"  #>  [801] \"573\"  \"574\"  \"575\"  \"576\"  \"577\"  \"578\"  \"579\"  \"58\"   \"580\"  \"581\"  #>  [811] \"582\"  \"583\"  \"585\"  \"586\"  \"587\"  \"588\"  \"589\"  \"59\"   \"590\"  \"591\"  #>  [821] \"592\"  \"593\"  \"594\"  \"595\"  \"596\"  \"597\"  \"598\"  \"599\"  \"6\"    \"60\"   #>  [831] \"600\"  \"601\"  \"602\"  \"603\"  \"604\"  \"605\"  \"606\"  \"607\"  \"608\"  \"609\"  #>  [841] \"61\"   \"610\"  \"611\"  \"612\"  \"613\"  \"614\"  \"615\"  \"616\"  \"617\"  \"618\"  #>  [851] \"619\"  \"62\"   \"620\"  \"621\"  \"622\"  \"623\"  \"624\"  \"625\"  \"626\"  \"627\"  #>  [861] \"628\"  \"629\"  \"63\"   \"630\"  \"631\"  \"632\"  \"633\"  \"634\"  \"635\"  \"636\"  #>  [871] \"637\"  \"638\"  \"639\"  \"64\"   \"640\"  \"641\"  \"642\"  \"643\"  \"644\"  \"645\"  #>  [881] \"646\"  \"647\"  \"648\"  \"649\"  \"65\"   \"650\"  \"651\"  \"652\"  \"653\"  \"654\"  #>  [891] \"655\"  \"656\"  \"657\"  \"658\"  \"659\"  \"66\"   \"660\"  \"661\"  \"662\"  \"663\"  #>  [901] \"664\"  \"665\"  \"666\"  \"667\"  \"668\"  \"669\"  \"67\"   \"670\"  \"671\"  \"672\"  #>  [911] \"673\"  \"674\"  \"675\"  \"676\"  \"677\"  \"678\"  \"679\"  \"68\"   \"680\"  \"681\"  #>  [921] \"682\"  \"683\"  \"685\"  \"686\"  \"687\"  \"688\"  \"689\"  \"69\"   \"690\"  \"691\"  #>  [931] \"692\"  \"693\"  \"694\"  \"695\"  \"696\"  \"699\"  \"7\"    \"70\"   \"700\"  \"701\"  #>  [941] \"702\"  \"703\"  \"704\"  \"705\"  \"706\"  \"707\"  \"708\"  \"71\"   \"710\"  \"711\"  #>  [951] \"712\"  \"715\"  \"716\"  \"718\"  \"719\"  \"72\"   \"721\"  \"722\"  \"723\"  \"724\"  #>  [961] \"726\"  \"727\"  \"728\"  \"729\"  \"73\"   \"732\"  \"733\"  \"734\"  \"738\"  \"739\"  #>  [971] \"74\"   \"741\"  \"742\"  \"744\"  \"745\"  \"746\"  \"748\"  \"749\"  \"75\"   \"751\"  #>  [981] \"753\"  \"756\"  \"757\"  \"758\"  \"759\"  \"76\"   \"760\"  \"761\"  \"762\"  \"763\"  #>  [991] \"764\"  \"765\"  \"766\"  \"767\"  \"768\"  \"769\"  \"77\"   \"770\"  \"771\"  \"772\"  #> [1001] \"773\"  \"774\"  \"775\"  \"776\"  \"777\"  \"778\"  \"78\"   \"780\"  \"781\"  \"782\"  #> [1011] \"783\"  \"784\"  \"785\"  \"786\"  \"787\"  \"788\"  \"789\"  \"79\"   \"790\"  \"791\"  #> [1021] \"792\"  \"793\"  \"794\"  \"795\"  \"796\"  \"797\"  \"798\"  \"799\"  \"8\"    \"80\"   #> [1031] \"801\"  \"802\"  \"803\"  \"804\"  \"805\"  \"806\"  \"807\"  \"808\"  \"809\"  \"81\"   #> [1041] \"810\"  \"811\"  \"812\"  \"813\"  \"814\"  \"815\"  \"816\"  \"818\"  \"819\"  \"82\"   #> [1051] \"820\"  \"821\"  \"822\"  \"823\"  \"824\"  \"825\"  \"826\"  \"827\"  \"828\"  \"829\"  #> [1061] \"83\"   \"830\"  \"831\"  \"832\"  \"833\"  \"834\"  \"835\"  \"836\"  \"837\"  \"838\"  #> [1071] \"839\"  \"84\"   \"840\"  \"841\"  \"842\"  \"843\"  \"844\"  \"845\"  \"846\"  \"847\"  #> [1081] \"848\"  \"849\"  \"85\"   \"850\"  \"851\"  \"852\"  \"854\"  \"855\"  \"856\"  \"857\"  #> [1091] \"858\"  \"859\"  \"86\"   \"860\"  \"861\"  \"862\"  \"863\"  \"864\"  \"865\"  \"866\"  #> [1101] \"867\"  \"868\"  \"869\"  \"87\"   \"870\"  \"871\"  \"872\"  \"873\"  \"874\"  \"875\"  #> [1111] \"876\"  \"877\"  \"878\"  \"879\"  \"88\"   \"880\"  \"881\"  \"882\"  \"883\"  \"885\"  #> [1121] \"886\"  \"887\"  \"888\"  \"889\"  \"89\"   \"890\"  \"891\"  \"892\"  \"893\"  \"894\"  #> [1131] \"897\"  \"898\"  \"899\"  \"9\"    \"90\"   \"900\"  \"902\"  \"903\"  \"904\"  \"905\"  #> [1141] \"906\"  \"907\"  \"908\"  \"909\"  \"91\"   \"910\"  \"911\"  \"912\"  \"913\"  \"914\"  #> [1151] \"915\"  \"916\"  \"917\"  \"918\"  \"919\"  \"92\"   \"920\"  \"921\"  \"922\"  \"923\"  #> [1161] \"924\"  \"925\"  \"926\"  \"928\"  \"929\"  \"93\"   \"930\"  \"931\"  \"932\"  \"933\"  #> [1171] \"934\"  \"935\"  \"936\"  \"939\"  \"94\"   \"940\"  \"941\"  \"942\"  \"943\"  \"944\"  #> [1181] \"947\"  \"948\"  \"949\"  \"95\"   \"950\"  \"951\"  \"952\"  \"953\"  \"954\"  \"955\"  #> [1191] \"956\"  \"957\"  \"958\"  \"959\"  \"96\"   \"960\"  \"961\"  \"962\"  \"963\"  \"964\"  #> [1201] \"965\"  \"966\"  \"967\"  \"968\"  \"97\"   \"970\"  \"971\"  \"972\"  \"973\"  \"974\"  #> [1211] \"976\"  \"977\"  \"978\"  \"979\"  \"98\"   \"980\"  \"981\"  \"982\"  \"983\"  \"984\"  #> [1221] \"985\"  \"986\"  \"987\"  \"988\"  \"989\"  \"99\"   \"990\"  \"991\"  \"992\"  \"993\"  #> [1231] \"994\"  \"995\"  \"996\"  \"997\"  \"998\"  \"999\""},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"view-passing-and-failed-ions-for-all-input-ions","dir":"Articles","previous_headings":"Summary","what":"View passing and failed ions for all input ions","title":"Filter","text":"can view filtering status input ions qc_summary() function. data.table reporting compound id (compounds) failed passed filtering. ion failed filtering, status report name filter failed.","code":"head(qc_summary(data_filtered)[order(compounds), ]) #>         status compounds #>         <char>    <char> #> 1: group-Media         1 #> 2: group-Media        10 #> 3: group-Media       100 #> 4:      Passed      1000 #> 5:      Passed      1001 #> 6:      Passed      1002"},{"path":"https://mums2.github.io/mpactr/articles/filter.html","id":"visualize-filtering-qc-with-tree-map-plot","dir":"Articles","previous_headings":"Summary","what":"Visualize filtering QC with tree map plot","title":"Filter","text":"can visualize filtering results tree map using filtering summary obtained qc_summary() packages ggplot2 treemapify. First, need determine number ions ion status summary table. can report count; however, need calculate percent ions group. done code chunk , used data.table syntax qc_summary() returns data.table object. familiar package data.table, check resources gitlab. Finally, plot treemap:  plot can customized ggplot2, example want display percentage:  longer need legend maybe want custom colors:  want fast visualization treemap, can pass mpactr object function plot_qc_tree().","code":"library(ggplot2) library(treemapify)  ion_counts <- qc_summary(data_filtered)[, .(count = .N), by = status][   , percent := (count / sum(count) * 100) ] tm <- ggplot(ion_counts) +   aes(area = percent, fill = status) +   geom_treemap() +   geom_treemap_text(aes(     label = paste(status, count, paste0(\"(\", round(percent, 2), \"%)\"),                   sep = \"\\n\"),     fontface = c(\"bold\")   ))  tm tm <- ggplot(ion_counts) +   aes(area = percent, fill = status) +   geom_treemap() +   geom_treemap_text(aes(     label = paste(status, paste0(\"(\", round(percent, 2), \"%)\"), sep = \"\\n\"),     fontface = c(\"bold\")   ))  tm tm +   scale_fill_brewer(palette = \"Greens\") +   theme(legend.position = \"none\") plot_qc_tree(data_filtered)"},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"load-data-into-r","dir":"Articles","previous_headings":"","what":"Load data into R","title":"Filter with mpact original data","text":"mpactr requires 2 files imput: feature table metadata file. expected comma separated files (.csv). peak_table: peak table Progenesis format expected. export compatable peak table Progenesis, navigate Review Compounds tab File -> Export Compound Measurements. Select following properties: Compound, m/z, Retention time (min), Raw abundance click ok. metadata: table sample information. minimum following columns expected: Injection, Sample_Code, Biological_Group. Injection sample name expected match sample column names peak_table. Sample_Code id technical replicate groups. Biological_Group id biological replicate groups. sample metadata can added, encouraged downstream analysis following filtering mpactr. import data R, use mpactr function import_data(), arguments: peak_table_file_path meta_data_file_path. tutorial show examples data original mpact program, found GitHub. dataset contain 38 samples biological groups solvent blanks, media blanks, Streptomyces sp. PTY08712 grown (250um_Ce) without (0um_Ce) rare earth element cerium. information experiments conducted see Samples, Puckett, Balunas 2023. original program sample metadata split across two files: sample list metadata. mpactr accepts single file, need combine one prior import import_data(). Load sample list metadata files. sample list contains additional blank samples feature table, therefore removed prior import. Now can import data. provide url peak_table, reformatted meta_data object. peak table exported Progenesis, set format argument Progenesis. create R6 class object, store peak table metadata. Calling new mpactr object print current peak table terminal:","code":"samplelist <- read_csv(\"https://raw.githubusercontent.com/BalunasLab/mpact/main/rawdata/PTY087I2/samplelist.csv\") #> Rows: 38 Columns: 8 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (4): Injection, MS method, LC method, Sample_Code #> dbl  (1): Injection volume #> lgl  (2): File Text, Sample_Notes #> time (1): Vial_Position #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. metadata <- read_csv(\"https://raw.githubusercontent.com/BalunasLab/mpact/main/rawdata/PTY087I2/extractmetadata.csv\") #> Rows: 10 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (4): Sample_Code, Organism, Biological_Group, Extract_Notes #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. samples <- colnames(read_csv(\"https://raw.githubusercontent.com/BalunasLab/mpact/main/rawdata/PTY087I2/200826_PTY087I2codingdataset.csv\", skip = 2)) %>% str_subset(., \"200826\") #> Rows: 4956 Columns: 33 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (1): Compound #> dbl (32): m/z, Retention time (min), 200826_blank1_r1, 200826_blank1_r2, 200... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.  meta_data <- samplelist %>%   left_join(metadata, by = \"Sample_Code\") %>%   filter(Injection %in% samples) data <- import_data(peak_table = \"https://raw.githubusercontent.com/BalunasLab/mpact/main/rawdata/PTY087I2/200826_PTY087I2codingdataset.csv\",   meta_data = meta_data,   format = \"Progenesis\" ) data #>               Compound       mz        rt 200826_blank1_r1 200826_blank1_r2 #>                 <char>    <num>     <num>            <num>            <num> #>    1:   0.80_418.1451n 419.1521 0.8027667          0.00000         0.000000 #>    2: 0.81_210.0803m/z 210.0803 0.8099167          0.00000         0.000000 #>    3:   4.11_444.1061n 889.2190 4.1109833          0.00000         0.000000 #>    4:   4.11_400.0799n 401.0872 4.1109833          0.00000         0.000000 #>    5:   0.80_627.2171n 650.2063 0.8027667          0.00000         0.000000 #>   ---                                                                       #> 4952: 8.95_740.1659m/z 740.1659 8.9477667         50.86249         0.000000 #> 4953: 9.94_801.6828m/z 801.6828 9.9434667         11.08239         1.229457 #> 4954: 8.45_702.2132m/z 702.2132 8.4499000        257.47905        38.155170 #> 4955: 8.35_664.5170m/z 664.5170 8.3506167        284.44529       291.579543 #> 4956: 8.88_467.1028m/z 467.1028 8.8770500       2150.74323         0.000000 #>       200826_blank1_r3 200826_PTY087I2_0umce1_r1 200826_PTY087I2_0umce1_r2 #>                  <num>                     <num>                     <num> #>    1:       0.00000000              3.020244e+05              3.056620e+05 #>    2:       0.00000000              1.655825e+05              1.668336e+05 #>    3:       0.00000000              3.401869e+04              3.530162e+04 #>    4:       0.00000000              4.358187e+04              4.370543e+04 #>    5:       0.00000000              4.332639e+04              4.388268e+04 #>   ---                                                                      #> 4952:       0.00000000              4.148686e+01              7.871277e+00 #> 4953:       9.07128542              9.266055e-02              1.530647e-01 #> 4954:       0.00000000              1.732118e+03              0.000000e+00 #> 4955:       0.01844371              3.013042e+01              3.180264e+01 #> 4956:       0.00000000              0.000000e+00              1.028675e+03 #>       200826_PTY087I2_0umce1_r3 200826_PTY087I2_0umce2_r1 #>                           <num>                     <num> #>    1:              3.101702e+05              2.978810e+05 #>    2:              1.675075e+05              1.625522e+05 #>    3:              3.543251e+04              2.000822e+04 #>    4:              4.357772e+04              3.155634e+04 #>    5:              4.557824e+04              4.335971e+04 #>   ---                                                     #> 4952:              0.000000e+00              5.231151e-01 #> 4953:              3.667251e-01              0.000000e+00 #> 4954:              0.000000e+00              1.925907e+03 #> 4955:              3.135295e+01              3.848152e+01 #> 4956:              0.000000e+00              0.000000e+00 #>       200826_PTY087I2_0umce2_r2 200826_PTY087I2_0umce2_r3 #>                           <num>                     <num> #>    1:              3.035890e+05              302993.80270 #>    2:              1.647463e+05              163903.73400 #>    3:              2.005072e+04               20880.29986 #>    4:              3.127270e+04               32045.00687 #>    5:              4.480789e+04               44925.54654 #>   ---                                                     #> 4952:              0.000000e+00                   0.00000 #> 4953:              4.336638e+00                  16.76814 #> 4954:              0.000000e+00                   0.00000 #> 4955:              3.330928e+01                  39.86223 #> 4956:              1.324812e+03                   0.00000 #>       200826_PTY087I2_0umce3_r1 200826_PTY087I2_0umce3_r2 #>                           <num>                     <num> #>    1:              302974.58390              303741.67880 #>    2:              163537.75040              163110.51990 #>    3:               22257.61067               23254.43336 #>    4:               32885.51773               34089.23273 #>    5:               44175.78590               44779.28226 #>   ---                                                     #> 4952:                   0.00000                   0.00000 #> 4953:                  22.20122                  27.34200 #> 4954:                3572.79179                   0.00000 #> 4955:                  40.88535                  31.80185 #> 4956:                   0.00000                2695.52447 #>       200826_PTY087I2_0umce3_r3 200826_PTY087I2_250umce1_r1 #>                           <num>                       <num> #>    1:              305307.58880                304461.58900 #>    2:              162538.71820                159919.35920 #>    3:               23551.62571                115011.92150 #>    4:               34572.55101                 86989.85992 #>    5:               45432.68848                 46936.50804 #>   ---                                                       #> 4952:                   0.00000                    10.90783 #> 4953:                  18.40502                    19.33673 #> 4954:                   0.00000                  2909.45195 #> 4955:                  37.87828                    36.48544 #> 4956:                   0.00000                     0.00000 #>       200826_PTY087I2_250umce1_r2 200826_PTY087I2_250umce1_r3 #>                             <num>                       <num> #>    1:                3.059096e+05                301102.32680 #>    2:                1.622441e+05                160509.21490 #>    3:                1.137904e+05                111088.30390 #>    4:                8.660144e+04                 84092.94428 #>    5:                4.671744e+04                 44639.13434 #>   ---                                                         #> 4952:                0.000000e+00                     0.00000 #> 4953:                8.184311e+00                    21.90738 #> 4954:                0.000000e+00                     0.00000 #> 4955:                3.628852e+01                    29.76471 #> 4956:                2.857433e+03                     0.00000 #>       200826_PTY087I2_250umce2_r1 200826_PTY087I2_250umce2_r2 #>                             <num>                       <num> #>    1:                2.950731e+05                294507.85260 #>    2:                1.569863e+05                157018.74160 #>    3:                9.171678e+04                 93573.47803 #>    4:                7.609289e+04                 76935.45726 #>    5:                4.381261e+04                 44053.75013 #>   ---                                                         #> 4952:                6.760895e+00                     0.00000 #> 4953:                7.221771e+00                    15.49070 #> 4954:                3.327218e+03                     0.00000 #> 4955:                2.518465e+01                    31.12184 #> 4956:                0.000000e+00                  3328.19867 #>       200826_PTY087I2_250umce2_r3 200826_PTY087I2_250umce3_r1 #>                             <num>                       <num> #>    1:                2.929342e+05                2.965014e+05 #>    2:                1.581785e+05                1.587843e+05 #>    3:                9.163425e+04                1.096399e+05 #>    4:                7.578763e+04                8.364374e+04 #>    5:                4.269494e+04                4.389627e+04 #>   ---                                                         #> 4952:                0.000000e+00                1.476297e+01 #> 4953:                9.325017e+00                5.648035e-03 #> 4954:                2.368871e-02                1.814666e+03 #> 4955:                3.390672e+01                3.206222e+01 #> 4956:                0.000000e+00                0.000000e+00 #>       200826_PTY087I2_250umce3_r2 200826_PTY087I2_250umce3_r3 200826_media1_r1 #>                             <num>                       <num>            <num> #>    1:                285505.55760                2.974424e+05     2.554827e+05 #>    2:                156528.89670                1.580228e+05     1.705910e+05 #>    3:                105935.69660                1.093869e+05     0.000000e+00 #>    4:                 82556.23968                8.342072e+04     0.000000e+00 #>    5:                 40825.92921                4.428666e+04     3.381575e+04 #>   ---                                                                          #> 4952:                     0.00000                0.000000e+00     5.259717e+01 #> 4953:                     0.00000                1.223522e+00     4.605544e+00 #> 4954:                     0.00000                0.000000e+00     1.498701e+03 #> 4955:                    31.94794                4.173415e+01     7.619112e+03 #> 4956:                  2671.52999                0.000000e+00     2.386338e+02 #>       200826_media1_r2 200826_media1_r3 200826_media2_r1 200826_media2_r2 #>                  <num>            <num>            <num>            <num> #>    1:     2.599233e+05     256021.50590     256086.16490     2.547825e+05 #>    2:     1.726717e+05     170716.05390     168874.36980     1.676367e+05 #>    3:     0.000000e+00          0.00000          0.00000     0.000000e+00 #>    4:     1.431221e-02          0.00000          0.00000     0.000000e+00 #>    5:     3.397754e+04      33169.47338      34372.98871     3.400355e+04 #>   ---                                                                     #> 4952:     0.000000e+00         83.52441          0.00000     0.000000e+00 #> 4953:     1.084082e+01          2.18883          8.67406     3.569775e+00 #> 4954:     0.000000e+00          0.00000         18.25012     0.000000e+00 #> 4955:     8.962027e+00         48.01832         13.24781     1.311910e+01 #> 4956:     2.095771e+02          0.00000          0.00000     2.203997e+02 #>       200826_media2_r3 200826_media3_r1 200826_media3_r2 200826_media3_r3 #>                  <num>            <num>            <num>            <num> #>    1:     2.565244e+05     2.601417e+05     2.526247e+05     2.582542e+05 #>    2:     1.692963e+05     1.695131e+05     1.672526e+05     1.707665e+05 #>    3:     0.000000e+00     0.000000e+00     0.000000e+00     0.000000e+00 #>    4:     0.000000e+00     0.000000e+00     0.000000e+00     0.000000e+00 #>    5:     3.396147e+04     3.518284e+04     3.317613e+04     3.422295e+04 #>   ---                                                                     #> 4952:     0.000000e+00     0.000000e+00     0.000000e+00     0.000000e+00 #> 4953:     3.475497e+00     2.908507e+00     7.279138e+00     1.909397e+00 #> 4954:     0.000000e+00     1.539513e+03     3.443881e+01     6.352884e+01 #> 4955:     1.589438e+01     2.351233e+01     1.777778e+01     2.357445e+01 #> 4956:     0.000000e+00     0.000000e+00     7.790370e+02     0.000000e+00 #>             kmd #>           <num> #>    1: 0.1520828 #>    2: 0.0803421 #>    3: 0.2189760 #>    4: 0.0872034 #>    5: 0.2063013 #>   ---           #> 4952: 0.1658522 #> 4953: 0.6828202 #> 4954: 0.2131724 #> 4955: 0.5170432 #> 4956: 0.1028370"},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"accessing-data-in-mpactr-object","dir":"Articles","previous_headings":"","what":"Accessing data in mpactr object","title":"Filter with mpact original data","text":"can extract peak table metadata point get_raw_data(), get_peak_table() get_meta_data() functions. functions return data.table object corresponding information.","code":""},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"extract-peak-table","dir":"Articles","previous_headings":"Accessing data in mpactr object","what":"Extract peak table","title":"Filter with mpact original data","text":"raw peak table unfiltered peak table used input mpactr. extract raw input peak table, use function get_raw_data(). raw peak table change filters applied data. want extract filtered peak table, filters applied, use get_peak_table():","code":"get_raw_data(data)[1:5, 1:8] #>            Compound       mz        rt 200826_blank1_r1 200826_blank1_r2 #>              <char>    <num>     <num>            <num>            <num> #> 1:   0.80_418.1451n 419.1521 0.8027667                0                0 #> 2: 0.81_210.0803m/z 210.0803 0.8099167                0                0 #> 3:   4.11_444.1061n 889.2190 4.1109833                0                0 #> 4:   4.11_400.0799n 401.0872 4.1109833                0                0 #> 5:   0.80_627.2171n 650.2063 0.8027667                0                0 #>    200826_blank1_r3 200826_PTY087I2_0umce1_r1 200826_PTY087I2_0umce1_r2 #>               <num>                     <num>                     <num> #> 1:                0                 302024.40                 305662.05 #> 2:                0                 165582.52                 166833.63 #> 3:                0                  34018.69                  35301.62 #> 4:                0                  43581.87                  43705.43 #> 5:                0                  43326.39                  43882.68 get_peak_table(data)[1:5, 1:8] #>            Compound       mz        rt 200826_blank1_r1 200826_blank1_r2 #>              <char>    <num>     <num>            <num>            <num> #> 1:   0.80_418.1451n 419.1521 0.8027667                0                0 #> 2: 0.81_210.0803m/z 210.0803 0.8099167                0                0 #> 3:   4.11_444.1061n 889.2190 4.1109833                0                0 #> 4:   4.11_400.0799n 401.0872 4.1109833                0                0 #> 5:   0.80_627.2171n 650.2063 0.8027667                0                0 #>    200826_blank1_r3 200826_PTY087I2_0umce1_r1 200826_PTY087I2_0umce1_r2 #>               <num>                     <num>                     <num> #> 1:                0                 302024.40                 305662.05 #> 2:                0                 165582.52                 166833.63 #> 3:                0                  34018.69                  35301.62 #> 4:                0                  43581.87                  43705.43 #> 5:                0                  43326.39                  43882.68"},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"extract-metadata","dir":"Articles","previous_headings":"Accessing data in mpactr object","what":"Extract metadata","title":"Filter with mpact original data","text":"Metadata can accessed get_meta_data():","code":"get_meta_data(data)[1:5, ] #>           Injection File Text Sample_Notes                     MS method #>              <char>    <lgcl>       <lgcl>                        <char> #> 1: 200826_blank1_r1        NA           NA RMS20181105_Balunas_11min_mse #> 2: 200826_blank1_r2        NA           NA RMS20181105_Balunas_11min_mse #> 3: 200826_blank1_r3        NA           NA RMS20181105_Balunas_11min_mse #> 4: 200826_media1_r1        NA           NA RMS20181105_Balunas_11min_mse #> 5: 200826_media1_r2        NA           NA RMS20181105_Balunas_11min_mse #>                                                         LC method Vial_Position #>                                                            <char>         <hms> #> 1: jlb20170623_Balunas_11minRogermethod_450uLmin_5to98_col3_noPDA      01:16:00 #> 2: jlb20170623_Balunas_11minRogermethod_450uLmin_5to98_col3_noPDA      01:16:00 #> 3: jlb20170623_Balunas_11minRogermethod_450uLmin_5to98_col3_noPDA      01:16:00 #> 4: jlb20170623_Balunas_11minRogermethod_450uLmin_5to98_col3_noPDA      01:01:00 #> 5: jlb20170623_Balunas_11minRogermethod_450uLmin_5to98_col3_noPDA      01:01:00 #>    Injection volume Sample_Code  Organism Biological_Group Extract_Notes #>               <num>      <char>    <char>           <char>        <char> #> 1:               10       Blank  50% MeOH           Blanks      50% MeOH #> 2:               10       Blank  50% MeOH           Blanks      50% MeOH #> 3:               10       Blank  50% MeOH           Blanks      50% MeOH #> 4:               10      MB1109 GYM_Media            Media     GYM_Media #> 5:               10      MB1109 GYM_Media            Media     GYM_Media"},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"reference-semantics","dir":"Articles","previous_headings":"","what":"Reference semantics","title":"Filter with mpact original data","text":"mpactr built R6 class-system, meaning operates reference semantics data updated -place. Compared shallow copy, data pointers copied, deep copy, entire data object copied memory, changes original data object, regardless assigned new object, result changes original data object. can see . raw data object 4956 ions feature table: can run filter_mispicked_ions filter, default setting copy_object = FALSE (operates reference semantics). results 4686 ions feature table (). Even though created object called data2_mispicked, original data2 object also updated now 4686 ions feature table: recommend using default copy_object = FALSE makes extremely fast memory-efficient way chain mpactr filters together (see Chaining filters together section Reference Semantics); however, like run filters individually traditional R style objects, can set copy_object TRUE shown filter examples.","code":"data2 <- import_data(peak_table = \"https://raw.githubusercontent.com/BalunasLab/mpact/main/rawdata/PTY087I2/200826_PTY087I2codingdataset.csv\",   meta_data = meta_data,   format = \"Progenesis\" )  get_peak_table(data2)[, 1:5] #>               Compound       mz        rt 200826_blank1_r1 200826_blank1_r2 #>                 <char>    <num>     <num>            <num>            <num> #>    1:   0.80_418.1451n 419.1521 0.8027667          0.00000         0.000000 #>    2: 0.81_210.0803m/z 210.0803 0.8099167          0.00000         0.000000 #>    3:   4.11_444.1061n 889.2190 4.1109833          0.00000         0.000000 #>    4:   4.11_400.0799n 401.0872 4.1109833          0.00000         0.000000 #>    5:   0.80_627.2171n 650.2063 0.8027667          0.00000         0.000000 #>   ---                                                                       #> 4952: 8.95_740.1659m/z 740.1659 8.9477667         50.86249         0.000000 #> 4953: 9.94_801.6828m/z 801.6828 9.9434667         11.08239         1.229457 #> 4954: 8.45_702.2132m/z 702.2132 8.4499000        257.47905        38.155170 #> 4955: 8.35_664.5170m/z 664.5170 8.3506167        284.44529       291.579543 #> 4956: 8.88_467.1028m/z 467.1028 8.8770500       2150.74323         0.000000 data2_mispicked <- filter_mispicked_ions(data2,   ringwin = 0.5,   isowin = 0.01, trwin = 0.005,   max_iso_shift = 3, merge_peaks = TRUE,   merge_method = \"sum\",   copy_object = FALSE ) #> ℹ Checking 4956 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 270 ions failed the mispicked filter, 4686 ions remain.  get_peak_table(data2_mispicked)[, 1:5] #> Key: <Compound, mz, kmd, rt> #>               Compound        mz        kmd         rt #>                 <char>     <num>      <num>      <num> #>    1: 0.03_102.1549m/z 102.15495 0.15494700 0.03431667 #>    2: 0.04_113.9641m/z 113.96412 0.96411580 0.04146667 #>    3: 0.06_182.9860m/z 182.98601 0.98600990 0.05573333 #>    4: 0.06_235.9635m/z 235.96353 0.96353360 0.05573333 #>    5:  0.09_68.9936m/z  68.99356 0.99355728 0.09145000 #>   ---                                                  #> 4682: 9.99_463.1718m/z 463.17181 0.17180700 9.98643333 #> 4683: 9.99_480.7214m/z 480.72136 0.72135840 9.98643333 #> 4684:  9.99_87.5099m/z  87.50993 0.50992700 9.99358333 #> 4685:  9.99_92.9671m/z  92.96709 0.96708947 9.98643333 #> 4686:  9.99_95.0612m/z  95.06120 0.06119876 9.99358333 #>       200826_PTY087I2_0umce1_r1 #>                           <num> #>    1:                   0.00000 #>    2:                 177.21710 #>    3:                5632.81768 #>    4:                  17.36759 #>    5:                  13.93727 #>   ---                           #> 4682:                  85.71503 #> 4683:                   0.00000 #> 4684:                  26.94538 #> 4685:                  46.99969 #> 4686:                  31.83990 get_peak_table(data2)[, 1:5] #> Key: <Compound, mz, kmd, rt> #>               Compound        mz        kmd         rt #>                 <char>     <num>      <num>      <num> #>    1: 0.03_102.1549m/z 102.15495 0.15494700 0.03431667 #>    2: 0.04_113.9641m/z 113.96412 0.96411580 0.04146667 #>    3: 0.06_182.9860m/z 182.98601 0.98600990 0.05573333 #>    4: 0.06_235.9635m/z 235.96353 0.96353360 0.05573333 #>    5:  0.09_68.9936m/z  68.99356 0.99355728 0.09145000 #>   ---                                                  #> 4682: 9.99_463.1718m/z 463.17181 0.17180700 9.98643333 #> 4683: 9.99_480.7214m/z 480.72136 0.72135840 9.98643333 #> 4684:  9.99_87.5099m/z  87.50993 0.50992700 9.99358333 #> 4685:  9.99_92.9671m/z  92.96709 0.96708947 9.98643333 #> 4686:  9.99_95.0612m/z  95.06120 0.06119876 9.99358333 #>       200826_PTY087I2_0umce1_r1 #>                           <num> #>    1:                   0.00000 #>    2:                 177.21710 #>    3:                5632.81768 #>    4:                  17.36759 #>    5:                  13.93727 #>   ---                           #> 4682:                  85.71503 #> 4683:                   0.00000 #> 4684:                  26.94538 #> 4685:                  46.99969 #> 4686:                  31.83990"},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"Filter with mpact original data","text":"mpactr provides filters correct following issues observed preprocessing tandem MS/MS data: mispicked ions: isotopic patterns incorrectly split preprocessing. solvent blank contamination: removal features present solvent blanks due carryover samples. background components: features whose abundance greater user-defined abundance threshold specific group samples, example media blanks. non-reproducible ions: inconsistent technical replicates. insource ions: fragment ions created ionization fragmentation tandem MS/MS workflow.","code":""},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"mispicked-ions-filter","dir":"Articles","previous_headings":"Filtering","what":"Mispicked ions filter","title":"Filter with mpact original data","text":"check mispicked ions, use mpactr function filter_mispicked_ions(). function takes mpactr object input, checks similar ions arguments ringwin, isowin, trwin max_iso_shift. Ions feature table flagged similar based retention time mass. Flagged ion groups suggested result incorrect splitting isotopic patterns peak picking, detector saturation artifacts, incorrect identification multiply charged oligomers. filter reports progress filtering, can see 4956 ions present prior checking mispicked ions. 270 ions found similar another ion following merging, 4686 ions remain. interested groups similar ions flagged filter, can use get_similar_ions(). function returns data.table reporting main ion (ion retained post-merging) ions similar .","code":"data_mispicked <- filter_mispicked_ions(data,   ringwin = 0.5,   isowin = 0.01, trwin = 0.005,   max_iso_shift = 3, merge_peaks = TRUE,   merge_method = \"sum\",   copy_object = TRUE ) #> ℹ Checking 4956 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 270 ions failed the mispicked filter, 4686 ions remain. head(get_similar_ions(data_mispicked)) #>            main_ion                      similar_ions #>              <char>                            <list> #> 1:  9.97_83.5172m/z                   9.97_84.9592m/z #> 2:  9.97_91.0082m/z   9.97_91.5049m/z,9.97_93.5039m/z #> 3:  1.99_91.0545m/z                   1.99_93.0679m/z #> 4: 2.00_103.0545m/z                  2.00_105.0674m/z #> 5: 9.99_106.0043m/z                  9.99_108.0234m/z #> 6: 9.97_111.0207m/z 9.97_111.5219m/z,9.97_112.5194m/z"},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"remove-ions-that-are-above-a-threshold-in-one-biological-group","dir":"Articles","previous_headings":"Filtering","what":"Remove ions that are above a threshold in one biological group","title":"Filter with mpact original data","text":"Removing solvent blank impurities important correcting -sample carryover contamination experimental samples. can identify remove ions mpactr’s filter_group() function. filter_group() identifies ions relative abundance threshold (group_threshold) specific group (group_to_remove). remove solvent blank impurities, set group_to_remove Biological_Group metadata file corresponds solvent blank samples, “Blanks”. example, 4956 ions present prior group filter. 1822 ions found relative abundance threshold 0.01 “Solvent_Blank” samples, leaving 3134 ions peak table. can also use filter remove ions groups, media blanks. can useful experiments cell cultures. example data contains samples belonging Biological_Group “Media”. samples media blanks, negative controls growth experiments conducted study. can remove features whose abundance greater 1% largest group media blank samples specifying group_to_remove = “Media”. recommend removing media blank ions following filters high-quality ions identified (see Chaining filters together ).","code":"data_blank <- filter_group(data,   group_threshold = 0.01,   group_to_remove = \"Blanks\", remove_ions = TRUE,   copy_object = TRUE ) #> ℹ Parsing 4956 peaks based on the sample group: Blanks. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Blanks. #> ✔ 1822 ions failed the Blanks filter, 3134 ions remain. data_media_blank <- filter_group(data,   group_threshold = 0.01,   group_to_remove = \"Media\", remove_ions = TRUE,   copy_object = TRUE ) #> ℹ Parsing 4956 peaks based on the sample group: Media. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Media. #> ✔ 3936 ions failed the Media filter, 1020 ions remain."},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"remove-non-reproducible-ions","dir":"Articles","previous_headings":"Filtering","what":"Remove non-reproducible ions","title":"Filter with mpact original data","text":"Ions whose abundance consisent technical replicates (.e., non-reproducible) may reliable analysis therefore removed feature table. Non-reproducible ions identified mean median coefficient variation (CV) technical replicates filter_cv(). Note - filter applied data contain technical replicates. example dataset, 2179 ions flagged non-reproducible. ions removed, leaving 2777 ions feature table. like visualize CV threshold performed dataset, can extract CV calculated filer_cv() using mpactr’s get_cv_data() function, calculate percentage features plotting. can look mean median CV shown example , can filter data parameter choice. nested data tibbles columns Compound, cv, index, index_scale: one tibble parameter (either mean median). also want calculate percentage features represented CV threshold. can plot percentage features CV:  can see roughly 56% features CV threshold meaning 44% removed CV threshold 0.2.","code":"data_rep <- filter_cv(data,   cv_threshold = 0.2, cv_param = \"median\",   copy_object = TRUE ) #> ℹ Parsing 4956 peaks for replicability across technical replicates. #> ✔ 2179 ions failed the cv_filter filter, 2777 ions remain. cv <- get_cv_data(data_rep) %>%   pivot_longer(cols = c(\"mean_cv\", \"median_cv\"),                names_to = \"param\",                values_to = \"cv\") %>%   nest(.by = param) %>%   mutate(     data = map(data, arrange, cv),     data = map(data, mutate, index = 0:(length(cv) - 1)),     data = map(data, mutate, index_scale = index * 100 / length(cv))   )  head(cv) #> # A tibble: 2 × 2 #>   param     data                 #>   <chr>     <list>               #> 1 mean_cv   <tibble [4,956 × 4]> #> 2 median_cv <tibble [4,956 × 4]> #> # A tibble: 6 × 4 #>   Compound               cv index index_scale #>   <chr>               <dbl> <int>       <dbl> #> 1 0.81_210.0803m/z  0.00636     0      0      #> 2 10.02_89.5072m/z  0.00686     1      0.0202 #> 3 10.02_110.0204m/z 0.00831     2      0.0404 #> 4 0.72_203.9632n    0.00928     3      0.0605 #> 5 0.80_418.1451n    0.0100      4      0.0807 #> 6 1.96_293.6773m/z  0.0104      5      0.101 cv_thresh_percent <- cv %>%   filter(param == \"median_cv\") %>%   unnest(cols = data) %>%   mutate(diff_cv_thresh = abs(cv - 0.2)) %>%   slice_min(diff_cv_thresh, n = 1) %>%   pull(index_scale)  cv_thresh_percent #> [1] 56.03309 cv %>%   unnest(cols = data) %>%   mutate(param = factor(param, levels = c(\"mean_cv\", \"median_cv\"),                         labels = c(\"mean\", \"median\"))) %>%   ggplot() +   aes(x = cv, y = index_scale, group = param, color = param) +   geom_line(linewidth = 2) +   geom_vline(xintercept = 0.2,              color = \"darkgrey\",              linetype = \"dashed\",              linewidth = 1) +   geom_hline(yintercept = cv_thresh_percent,              color = \"darkgrey\",              linewidth = 1) +   labs(x = \"CV\",        y = \"Percentage of Features\",        param = \"Statistic\") +   theme_bw() +   theme(     axis.title = element_text(size = 20),     axis.text = element_text(size = 15),     legend.position = \"inside\",     legend.position.inside = c(.90, .08),     legend.title = element_blank(),     legend.text = element_text(size = 15)   ) #> Ignoring unknown labels: #> • param : \"Statistic\""},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"remove-insource-fragment-ions","dir":"Articles","previous_headings":"Filtering","what":"Remove insource fragment ions","title":"Filter with mpact original data","text":"mass species can fragmented ionization tandem MS/MS, creating insource ions. can result ions one compound represented feature table. like remove insource ions fragments, can mpactr’s filter_insource_ions(). filter_insource_ions() conducts ion deconvolution via retention time correlation matrices within MS1 scans. Highly correlated ion groups determined cluster_threshold parameter filtered remove low mass features. highest mass feature identified likely precursor ion retained feature table. 600 ions identified removed deconvolution dataset, leaving 4356 ions feature table.","code":"data_insource <- filter_insource_ions(data,   cluster_threshold = 0.95,   copy_object = TRUE ) #> ℹ Parsing 4956 peaks for insource ions. #> ✔ 600 ions failed the insource filter, 4356 ions remain."},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"chaining-filters-together","dir":"Articles","previous_headings":"Filtering","what":"Chaining filters together","title":"Filter with mpact original data","text":"Filters can chained customizable workflow, shown . filters can chained order, recommend filtering mispicked ions, solvent blanks, prior filtering non-repoducible insource ions. allow incorrectly picked peaks merged contamination/carryover removed prior identifying non-reproducible insource fragment ions. also demonstrate removal media blank components filter_group() function identification high-quality ions.","code":"data <- import_data(peak_table = \"https://raw.githubusercontent.com/BalunasLab/mpact/main/rawdata/PTY087I2/200826_PTY087I2codingdataset.csv\",   meta_data = meta_data,   format = \"Progenesis\" )  data_filtered <- filter_mispicked_ions(data, merge_method = \"sum\") |>   filter_group(group_to_remove = \"Blanks\") |>   filter_cv(cv_threshold = 0.2, cv_param = \"median\") |>   filter_group(group_to_remove = \"Media\") #> ℹ Checking 4956 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 270 ions failed the mispicked filter, 4686 ions remain. #> ℹ Parsing 4686 peaks based on the sample group: Blanks. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Blanks. #> ✔ 1741 ions failed the Blanks filter, 2945 ions remain. #> ℹ Parsing 2945 peaks for replicability across technical replicates. #> ✔ 1143 ions failed the cv_filter filter, 1802 ions remain. #> ℹ Parsing 1802 peaks based on the sample group: Media. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Media. #> ✔ 1239 ions failed the Media filter, 563 ions remain."},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Filter with mpact original data","text":"mpactr offers mutliple ways view summary data filtering.","code":""},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"view-passing-and-failed-ions-for-a-single-filter","dir":"Articles","previous_headings":"Summary","what":"View passing and failed ions for a single filter","title":"Filter with mpact original data","text":"interested viewing passing failing ions single filter, use filter_summary() function. must specify filter intested , either “mispicked”, “group”, “replicability”, “insource”. Failed ions: Passing ions: set filter filter name apply data, error message returned. want retrieve filter summary group filter, must also supply group name group argument: group must always supplied filter, even one group filter applied.","code":"mispicked_summary <- filter_summary(data_filtered, filter = \"mispicked\") head(mispicked_summary$failed_ions, 100) #>   [1] \"9.97_84.9592m/z\"   \"9.97_91.5049m/z\"   \"9.97_93.5039m/z\"   #>   [4] \"1.99_93.0679m/z\"   \"2.00_105.0674m/z\"  \"9.99_108.0234m/z\"  #>   [7] \"9.97_111.5219m/z\"  \"9.97_112.5194m/z\"  \"2.32_117.0586m/z\"  #>  [10] \"2.00_120.0817m/z\"  \"2.00_120.1345m/z\"  \"2.00_120.1704m/z\"  #>  [13] \"0.77_118.1157m/z\"  \"1.99_120.3792m/z\"  \"2.32_132.0815m/z\"  #>  [16] \"0.67_131.5785m/z\"  \"1.46_132.1331m/z\"  \"1.21_133.0896n\"    #>  [19] \"0.84_139.0507m/z\"  \"2.32_143.0736m/z\"  \"2.32_144.0816m/z\"  #>  [22] \"0.62_143.5978m/z\"  \"0.67_147.1134m/z\"  \"3.92_151.0634m/z\"  #>  [25] \"4.62_165.0704m/z\"  \"2.00_166.4370m/z\"  \"1.99_166.1491m/z\"  #>  [28] \"4.12_176.0628m/z\"  \"0.62_180.6223m/z\"  \"10.11_183.0220m/z\" #>  [31] \"0.94_186.5569m/z\"  \"1.21_189.1242m/z\"  \"0.94_190.0465m/z\"  #>  [34] \"3.61_193.0423m/z\"  \"0.62_195.6240m/z\"  \"1.19_196.0381n\"    #>  [37] \"4.78_198.0854m/z\"  \"1.21_201.0726m/z\"  \"1.21_202.1205m/z\"  #>  [40] \"2.07_202.1180m/z\"  \"3.63_207.0634m/z\"  \"0.81_210.1507m/z\"  #>  [43] \"0.81_210.1997m/z\"  \"0.81_210.2631m/z\"  \"0.81_210.4740m/z\"  #>  [46] \"2.94_212.1208m/z\"  \"0.65_213.0191m/z\"  \"2.07_217.1056m/z\"  #>  [49] \"1.91_217.1553m/z\"  \"1.20_218.1109m/z\"  \"1.22_221.5316m/z\"  #>  [52] \"1.21_223.0594m/z\"  \"1.96_227.6359m/z\"  \"1.21_227.1005m/z\"  #>  [55] \"0.84_226.1553m/z\"  \"3.72_227.1760m/z\"  \"3.63_229.0865m/z\"  #>  [58] \"1.21_231.1367m/z\"  \"1.92_234.1403m/z\"  \"1.22_237.1363m/z\"  #>  [61] \"0.63_238.1461m/z\"  \"2.35_237.1243m/z\"  \"1.21_244.1664m/z\"  #>  [64] \"0.66_244.1380m/z\"  \"1.21_247.1298m/z\"  \"0.67_123.5768n\"    #>  [67] \"2.22_247.1295m/z\"  \"4.12_250.5607m/z\"  \"0.62_250.1370m/z\"  #>  [70] \"0.62_252.1540m/z\"  \"2.23_250.1917m/z\"  \"1.82_252.1519m/z\"  #>  [73] \"0.83_253.1626n\"    \"0.75_258.1110m/z\"  \"3.14_258.5443m/z\"  #>  [76] \"0.66_257.6233m/z\"  \"0.66_258.1473m/z\"  \"0.75_261.0120m/z\"  #>  [79] \"1.24_260.1969m/z\"  \"3.96_263.5542m/z\"  \"1.17_265.0928m/z\"  #>  [82] \"0.64_271.9292m/z\"  \"9.97_250.9284n\"    \"1.21_273.1650m/z\"  #>  [85] \"1.21_274.0933m/z\"  \"2.35_275.6568m/z\"  \"1.17_275.6450m/z\"  #>  [88] \"3.43_278.0424m/z\"  \"0.64_280.6631m/z\"  \"1.89_283.6481m/z\"  #>  [91] \"3.99_286.0659m/z\"  \"0.64_288.1607m/z\"  \"1.21_287.5791m/z\"  #>  [94] \"1.17_143.5989n\"    \"0.83_288.2030m/z\"  \"1.20_289.6186m/z\"  #>  [97] \"0.83_291.1546m/z\"  \"0.64_292.4432m/z\"  \"10.09_294.0010m/z\" #> [100] \"1.21_294.5725m/z\" head(mispicked_summary$passed_ions, 100) #>   [1] \"0.03_102.1549m/z\" \"0.04_113.9641m/z\" \"0.06_182.9860m/z\" #>   [4] \"0.06_235.9635m/z\" \"0.09_68.9936m/z\"  \"0.10_102.1549m/z\" #>   [7] \"0.13_102.1552m/z\" \"0.17_213.0188m/z\" \"0.23_102.1549m/z\" #>  [10] \"0.28_691.4629m/z\" \"0.33_102.1550m/z\" \"0.35_68.9936m/z\"  #>  [13] \"0.39_102.1549m/z\" \"0.40_213.0184m/z\" \"0.41_145.0360m/z\" #>  [16] \"0.43_102.1549m/z\" \"0.45_345.2033m/z\" \"0.48_102.1548m/z\" #>  [19] \"0.53_102.1550m/z\" \"0.57_153.7767m/z\" \"0.57_201.7990m/z\" #>  [22] \"0.58_177.4624m/z\" \"0.59_144.4417m/z\" \"0.59_203.2244m/z\" #>  [25] \"0.59_250.8096m/z\" \"0.60_129.1388m/z\" \"0.60_146.1659m/z\" #>  [28] \"0.60_182.7792m/z\" \"0.60_220.1359m/z\" \"0.60_308.2184m/z\" #>  [31] \"0.60_397.4459m/z\" \"0.61_138.1082m/z\" \"0.61_173.6264m/z\" #>  [34] \"0.61_188.6307m/z\" \"0.61_195.1269m/z\" \"0.61_209.1333m/z\" #>  [37] \"0.61_210.1284m/z\" \"0.61_300.1594m/z\" \"0.62_129.5943m/z\" #>  [40] \"0.62_141.5828n\"   \"0.62_143.0402m/z\" \"0.62_152.1111m/z\" #>  [43] \"0.62_178.1125m/z\" \"0.62_186.1072m/z\" \"0.62_187.6351m/z\" #>  [46] \"0.62_193.1150m/z\" \"0.62_202.6318m/z\" \"0.62_206.6184m/z\" #>  [49] \"0.62_207.1142m/z\" \"0.62_216.1416m/z\" \"0.62_216.6342m/z\" #>  [52] \"0.62_223.1375m/z\" \"0.62_224.1328m/z\" \"0.62_230.1451m/z\" #>  [55] \"0.62_237.6514m/z\" \"0.62_242.6282m/z\" \"0.62_247.8076m/z\" #>  [58] \"0.62_249.6332m/z\" \"0.62_252.6512m/z\" \"0.62_259.1503m/z\" #>  [61] \"0.62_267.1498m/z\" \"0.62_273.6578m/z\" \"0.62_281.1568m/z\" #>  [64] \"0.62_295.1650m/z\" \"0.62_312.1757m/z\" \"0.63_102.1551m/z\" #>  [67] \"0.63_119.4797m/z\" \"0.63_133.4769m/z\" \"0.63_153.9915m/z\" #>  [70] \"0.63_156.5933m/z\" \"0.63_166.1144m/z\" \"0.63_174.5051m/z\" #>  [73] \"0.63_192.1185m/z\" \"0.63_200.6172m/z\" \"0.63_214.9373m/z\" #>  [76] \"0.63_221.1212m/z\" \"0.63_228.6148m/z\" \"0.63_235.6279m/z\" #>  [79] \"0.63_245.1423m/z\" \"0.63_265.4417m/z\" \"0.63_268.1517m/z\" #>  [82] \"0.63_269.1494m/z\" \"0.63_270.1403n\"   \"0.63_280.1518m/z\" #>  [85] \"0.63_283.9593m/z\" \"0.63_311.9542m/z\" \"0.64_102.0344m/z\" #>  [88] \"0.64_110.9997n\"   \"0.64_151.0360m/z\" \"0.64_161.5051m/z\" #>  [91] \"0.64_177.7884m/z\" \"0.64_185.4569m/z\" \"0.64_190.4682m/z\" #>  [94] \"0.64_198.4570m/z\" \"0.64_200.1062m/z\" \"0.64_201.6398m/z\" #>  [97] \"0.64_209.6270m/z\" \"0.64_257.9271m/z\" \"0.64_259.6555m/z\" #> [100] \"0.64_270.9272m/z\" filter_summary(data_filtered, filter = \"insource\") #> Error in `mpactr_object$get_log()`: #> ! `filter` insource has not yet been applied to the data. Run the #>   corresponding filter function prior to extracting the summary. filter_summary(data_filtered, filter = \"group\", group = \"Blanks\")"},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"view-passing-and-failed-ions-for-all-input-ions","dir":"Articles","previous_headings":"Summary","what":"View passing and failed ions for all input ions","title":"Filter with mpact original data","text":"can view filtering status input ions qc_summary() function. data.table reporting compound id (compounds) failed passed filtering. ion failed filtering, status report name filter failed.","code":"head(qc_summary(data_filtered)[order(compounds), ]) #>           status        compounds #>           <char>           <char> #> 1:  group-Blanks 0.03_102.1549m/z #> 2:  group-Blanks 0.04_113.9641m/z #> 3:  group-Blanks 0.06_182.9860m/z #> 4:  group-Blanks 0.06_235.9635m/z #> 5: replicability  0.09_68.9936m/z #> 6:  group-Blanks 0.10_102.1549m/z"},{"path":"https://mums2.github.io/mpactr/articles/filter2.html","id":"visualize-filtering-qc-with-tree-map-plot","dir":"Articles","previous_headings":"Summary","what":"Visualize filtering QC with tree map plot","title":"Filter with mpact original data","text":"can visualize filtering results tree map using filtering summary obtained qc_summary() packages ggplot2 treemapify. First, need determine number ions ion status summary table. can report count; however, need calculate percent ions group. done code chunk , used data.table syntax qc_summary() returns data.table object. familiar package data.table, check resources gitlab. Finally, plot treemap:  plot can customized ggplot2, example want display percentage:  longer need legend maybe want custom colors:  want fast visualization treemap, can pass mpactr object function plot_qc_tree().","code":"library(ggplot2) library(treemapify)  ion_counts <- qc_summary(data_filtered)[, .(count = .N), by = status][   , percent := (count / sum(count) * 100) ] tm <- ggplot(ion_counts) +   aes(area = percent, fill = status) +   geom_treemap() +   geom_treemap_text(aes(     label = paste(status, count, paste0(\"(\", round(percent, 2), \"%)\"),                   sep = \"\\n\"),     fontface = c(\"bold\")   ))  tm tm <- ggplot(ion_counts) +   aes(area = percent, fill = status) +   geom_treemap() +   geom_treemap_text(aes(     label = paste(status, paste0(\"(\", round(percent, 2), \"%)\"), sep = \"\\n\"),     fontface = c(\"bold\")   ))  tm tm +   scale_fill_brewer(palette = \"Greens\") +   theme(legend.position = \"none\") plot_qc_tree(data_filtered)"},{"path":"https://mums2.github.io/mpactr/articles/reference_semantics.html","id":"reference-semantics","dir":"Articles","previous_headings":"","what":"Reference semantics","title":"Reference Semantics","text":"mpactr built R6 class-system, meaning operates reference semantics data updated -place. Compared shallow copy, data pointers copied, deep copy, entire data object copied memory, changes original data object, regardless assigned new object, result changes original data object. can see . raw data object 1334 ions feature table. Running filter_mispicked_ions filter, default setting copy_object = FALSE (operates reference semantics) results 1261 ions feature table. Even though created object called data2_mispicked, original data2 object also updated now 1261 ions feature table: recommend using default copy_object = FALSE makes extremely fast memory-efficient way chain mpactr filters together (see Filter article); however, like run filters individually traditional R style objects, can set copy_object TRUE shown filter examples.","code":"data2 <- import_data(example(\"cultures_peak_table.csv\"),   example(\"cultures_metadata.csv\"),   format = \"Progenesis\" )   get_peak_table(data2)[, 1:5] #>       Compound       mz         rt 102623_UM1848B_JC1_69_1_5004 #>         <char>    <num>      <num>                        <num> #>    1:        1 256.0883  0.7748333                         0.00 #>    2:        2 484.2921  0.7756667                       546.56 #>    3:        3 445.2276  0.7786667                         0.00 #>    4:        4 354.1842  0.7786667                         0.00 #>    5:        5 353.1995  0.7816667                         0.00 #>   ---                                                           #> 1330:     1330 538.3182 11.4396667                         0.00 #> 1331:     1331 424.2710 11.4315000                         0.00 #> 1332:     1332 422.1770 11.4568333                     10655.27 #> 1333:     1333 422.1776 11.4528333                       923.77 #> 1334:     1334 538.3981 11.4811667                      1176.19 #>       102623_UM1846B_Media_67_1_5005 #>                                <num> #>    1:                           0.00 #>    2:                       16389.28 #>    3:                       22515.28 #>    4:                        6086.35 #>    5:                        5923.96 #>   ---                                #> 1330:                           0.00 #> 1331:                           0.00 #> 1332:                        5737.01 #> 1333:                           0.00 #> 1334:                        1353.96 data2_mispicked <- filter_mispicked_ions(data2,   ringwin = 0.5,   isowin = 0.01, trwin = 0.005,   max_iso_shift = 3, merge_peaks = TRUE,   merge_method = \"sum\",   copy_object = FALSE ) #> ℹ Checking 1334 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 73 ions failed the mispicked filter, 1261 ions remain.  get_peak_table(data2_mispicked)[, 1:5] #> Key: <Compound, mz, kmd, rt> #>       Compound       mz     kmd        rt 102423_Blank_77_1_5095 #>         <char>    <num>   <num>     <num>                  <num> #>    1:        1 256.0883 0.08831 0.7748333                      0 #>    2:       10 340.2040 0.20399 0.7916667                      0 #>    3:      100 557.1519 0.15191 3.6925000                      0 #>    4:     1000 278.0638 0.06382 5.5228333                      0 #>    5:     1001 296.0736 0.07365 5.5246667                      0 #>   ---                                                            #> 1257:      995 561.2726 0.27255 5.4810000                      0 #> 1258:      996 228.1430 0.14305 5.4818333                      0 #> 1259:      997 425.1873 0.18726 5.4640000                      0 #> 1260:      998 337.1987 0.19873 5.4818333                      0 #> 1261:      999 640.3299 0.32993 5.4596667                      0 get_peak_table(data2)[, 1:5] #> Key: <Compound, mz, kmd, rt> #>       Compound       mz     kmd        rt 102423_Blank_77_1_5095 #>         <char>    <num>   <num>     <num>                  <num> #>    1:        1 256.0883 0.08831 0.7748333                      0 #>    2:       10 340.2040 0.20399 0.7916667                      0 #>    3:      100 557.1519 0.15191 3.6925000                      0 #>    4:     1000 278.0638 0.06382 5.5228333                      0 #>    5:     1001 296.0736 0.07365 5.5246667                      0 #>   ---                                                            #> 1257:      995 561.2726 0.27255 5.4810000                      0 #> 1258:      996 228.1430 0.14305 5.4818333                      0 #> 1259:      997 425.1873 0.18726 5.4640000                      0 #> 1260:      998 337.1987 0.19873 5.4818333                      0 #> 1261:      999 640.3299 0.32993 5.4596667                      0"},{"path":"https://mums2.github.io/mpactr/articles/reference_semantics.html","id":"deep-copy-specifics-of-the-r6-class","dir":"Articles","previous_headings":"","what":"Deep copy: specifics of the R6 class","title":"Reference Semantics","text":"R6 class-system operates reference semantics data updated -place. Compared shallow copy, data pointers copied, deep copy, entire data object copied memory, changes original data object, regardless assigned new object, result changes original data object. R6 Accomplishes taking advantaging environment system R. Inside R, everything created inside base R environment. contains functions, saved variables, libraries, references, etc. Using R6 classes allows us easily add functionality R package. general, R relies reference semantics store data away outside R environments container copious amount data. normal R session, base R environment outermost environment, allowing access everything need. Reference semantics become noticeable send environmental variable function. R, functions rely call--value semantics. Call--value described functions treating parameterized values (values specified calling function) local variables function. Anything variable function effect variables outside. follows traditional copy value semantics. However, R allow send variables reference due idea. , can think functions temporary environments R. makes environments powerful, fact can send environment function, copy environment. allows send variables reference functions. R6 classes rely , mpactr uses speedy execution. Memory usage really shines use R6 classes vs. traditional workflow, copy value. traditional workflow, data must copied call functions compute operations, using R6 classes can minimize problem, improving performace large datasets.","code":""},{"path":"https://mums2.github.io/mpactr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Allison Mason. Author. Gregory Johnson. Author. Patrick Schloss. Author, maintainer, copyright holder.","code":""},{"path":"https://mums2.github.io/mpactr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mason , Johnson G, Schloss P (2025). mpactr: Correction Preprocessed MS Data. R package version 0.1.0, https://mums2.github.io/mpactr/.","code":"@Manual{,   title = {mpactr: Correction of Preprocessed MS Data},   author = {Allison Mason and Gregory Johnson and Patrick Schloss},   year = {2025},   note = {R package version 0.1.0},   url = {https://mums2.github.io/mpactr/}, }"},{"path":[]},{"path":"https://mums2.github.io/mpactr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Correction of Preprocessed MS Data","text":"mpactr collection filters purpose identifying high quality MS1 features correcting peak selection errors introduced pre-processing tandem mass spectrometry data. Filters package address following issues: filter_mispicked_ions(): removal mispicked peaks, isotopic patterns incorrectly split preprocessing. filter_group(): removal features overrepresented specific group samples; example removal features present solvent blanks due carryover samples. filter_cv(): removal non-reproducible features, inconsistent technical replicates. filter_insource_ions(): removal fragment ions created first ionization tandem MS/MS workflow. filters independent, meaning can used create project-specific workflow, can learn Filter vignette.","code":""},{"path":"https://mums2.github.io/mpactr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Correction of Preprocessed MS Data","text":"can install CRAN version : can install development version mpactr GitHub :","code":"install.packages(\"mpactr\") # install.packages(\"devtools\") devtools::install_github(\"SchlossLab/mpactr\")"},{"path":"https://mums2.github.io/mpactr/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get started","title":"Correction of Preprocessed MS Data","text":"See Filter vignette get started.","code":""},{"path":"https://mums2.github.io/mpactr/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Correction of Preprocessed MS Data","text":"encounter issue, please file issue GitHub. Please include minimal reproducible example issue.","code":""},{"path":"https://mums2.github.io/mpactr/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Correction of Preprocessed MS Data","text":"feature ’d like see included, please let us know! Pull requests welcome GitHub.","code":""},{"path":"https://mums2.github.io/mpactr/reference/cultures_data.html","id":null,"dir":"Reference","previous_headings":"","what":"LC-MS/MS sample data — cultures_data","title":"LC-MS/MS sample data — cultures_data","text":"mpactr R6 class object contining feature table associated sample metadata.","code":""},{"path":"https://mums2.github.io/mpactr/reference/cultures_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LC-MS/MS sample data — cultures_data","text":"","code":"cultures_data"},{"path":[]},{"path":"https://mums2.github.io/mpactr/reference/cultures_data.html","id":"culture-data","dir":"Reference","previous_headings":"","what":"culture_data","title":"LC-MS/MS sample data — cultures_data","text":"mpactr 2 attributes: peak_table feature table class data.table meta_data data.table associated sample metadata","code":""},{"path":"https://mums2.github.io/mpactr/reference/cultures_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LC-MS/MS sample data — cultures_data","text":"mpactr R6 class object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file paths for examples — example","title":"Get file paths for examples — example","text":"mpactr contains number example files inst/extdata directory. function makes accessible documentation shows file paths used function examples.","code":""},{"path":"https://mums2.github.io/mpactr/reference/example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file paths for examples — example","text":"","code":"example(file = NULL)"},{"path":"https://mums2.github.io/mpactr/reference/example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file paths for examples — example","text":"file Name file. NULL, examples files listed.","code":""},{"path":"https://mums2.github.io/mpactr/reference/example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file paths for examples — example","text":"file path example data stored inst/extdata directory package.","code":""},{"path":"https://mums2.github.io/mpactr/reference/example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file paths for examples — example","text":"","code":"example() #> [1] \"coculture_peak_table.csv\"           \"cultures_metaboscape_metadata.csv\"  #> [3] \"cultures_metaboscape_peaktable.csv\" \"cultures_metadata.csv\"              #> [5] \"cultures_peak_table.csv\"            \"ion_masses\"                         #> [7] \"metadata.csv\"                        example(\"metadata.csv\") #> [1] \"/home/runner/work/_temp/Library/mpactr/extdata/metadata.csv\""},{"path":"https://mums2.github.io/mpactr/reference/filter_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Non-reproducible ions — filter_cv","title":"Filter Non-reproducible ions — filter_cv","text":"filter_cv() removes feature ions found non-reproducible technical injection replicates. Reproducibility assessed via mean median coefficient variation (CV) technical replicates. , filter expecting input dataset least two replicate injections per sample. copy_object: mpactr built R6 class-system, meaning operates reference semantics data updated -place. Compared shallow copy, data pointers copied, deep copy, entire data object copied memory, changes original data object, regardless assigned new object, result changes original data object. recommend using default copy_object = FALSE makes extremely fast memory-efficient way chain mpactr filters together; however, like run filters individually traditional R style objects, can set copy_object TRUE shown filter examples.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Non-reproducible ions — filter_cv","text":"","code":"filter_cv(mpactr_object, cv_threshold = NULL, cv_param, copy_object = FALSE)"},{"path":"https://mums2.github.io/mpactr/reference/filter_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Non-reproducible ions — filter_cv","text":"mpactr_object mpactr_object. See import_data(). cv_threshold Coefficient variation threshold. lower cv_threshold result stringent filtering higher reproducibility. Recommended values 0.2 - 0.5. cv_param Coefficient variation (CV) statistic use filtering Options \"mean\" \"median\", corresponding mean median CV, respectively. copy_object boolean parameter allows users return copied object instead modifying object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Non-reproducible ions — filter_cv","text":"mpactr_object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Non-reproducible ions — filter_cv","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_cv(data,   cv_threshold = 0.01,   cv_param = \"mean\",   copy_object = TRUE ) #> ℹ Parsing 1303 peaks for replicability across technical replicates. #> ✔ 1298 ions failed the cv_filter filter, 5 ions remain.  data_filter <- filter_cv(data,   cv_threshold = 0.01,   cv_param = \"median\",   copy_object = TRUE ) #> ℹ Parsing 1303 peaks for replicability across technical replicates. #> ✔ 1298 ions failed the cv_filter filter, 5 ions remain."},{"path":"https://mums2.github.io/mpactr/reference/filter_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Ions by Group — filter_group","title":"Filter Ions by Group — filter_group","text":"Filter Ions Group","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Ions by Group — filter_group","text":"","code":"filter_group(   mpactr_object,   group_threshold = 0.01,   group_to_remove,   remove_ions = TRUE,   copy_object = FALSE )"},{"path":"https://mums2.github.io/mpactr/reference/filter_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Ions by Group — filter_group","text":"mpactr_object mpactr_object. See import_data(). group_threshold Relative abundance threshold remove ions. Default = 0.01. group_to_remove Biological group name remove ions . remove_ions boolean parameter. TRUE failing ions removed peak table. Default = TRUE. copy_object boolean parameter allows users return copied object instead modifying object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Ions by Group — filter_group","text":"mpactr_object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Ions by Group — filter_group","text":"filter_group() removes feature ions present user-defined group based relative abundance threshold. particularly useful filter features found present solvent blank samples. , filter can ultilized remove features media blank sample experiments microbial cultures. presence absence features group samples determined first averaging injection replicates averaging biological replicates within biological treatment group. feature present group abundance greater user-defined group_threshold. default 0.01, meaning feature removed abundance 1% sample group abundant. example, blank filtering can remove features whose mean abundance solvent blank injections greater 1% maximum mean abundance experimental samples. like remove features found media blank samples, recommend testing group_threshold parameter. copy_object: mpactr built R6 class-system, meaning operates reference semantics data updated -place. Compared shallow copy, data pointers copied, deep copy, entire data object copied memory, changes original data object, regardless assigned new object, result changes original data object. recommend using default copy_object = FALSE makes extremely fast memory-efficient way chain mpactr filters together; however, like run filters individually traditional R style objects, can set copy_object TRUE shown filter examples.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Ions by Group — filter_group","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_group(data,   group_threshold = 0.01,   group_to_remove = \"Blanks\",   remove_ions = TRUE ) #> ℹ Parsing 1303 peaks based on the sample group: Blanks. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Blanks. #> ✔ 796 ions failed the Blanks filter, 507 ions remain."},{"path":"https://mums2.github.io/mpactr/reference/filter_insource_ions.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Insource ions — filter_insource_ions","title":"Filter Insource ions — filter_insource_ions","text":"filter_insource_ions() identifies removes -source ion clusters based Pearson correlation threshold. Groups co-eluting features identical retention time identified used generate Pearson correlation matrices. Clusters self-similarity greater user-defined cluster_threshold within matrices identified likely belonging single precursor ion associated insource ion. Highly correlated ions identified removed. copy_object: mpactr built R6 class-system, meaning operates reference semantics data updated -place. Compared shallow copy, data pointers copied, deep copy, entire data object copied memory, changes original data object, regardless assigned new object, result changes original data object. recommend using default copy_object = FALSE makes extremely fast memory-efficient way chain mpactr filters together; however, like run filters individually traditional R style objects, can set copy_object TRUE shown filter examples.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_insource_ions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Insource ions — filter_insource_ions","text":"","code":"filter_insource_ions(   mpactr_object,   cluster_threshold = 0.95,   copy_object = FALSE )"},{"path":"https://mums2.github.io/mpactr/reference/filter_insource_ions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Insource ions — filter_insource_ions","text":"mpactr_object mpactr_object. See import_data(). cluster_threshold Cluster threshold ion deconvolution. Default = 0.95. copy_object boolean parameter allows users return copied object instead modifying object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_insource_ions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Insource ions — filter_insource_ions","text":"mpactr_object","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_insource_ions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Insource ions — filter_insource_ions","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_insource_ions(data,   cluster_threshold = 0.95 ) #> ℹ Parsing 1303 peaks for insource ions. #> ✔ 71 ions failed the insource filter, 1232 ions remain."},{"path":"https://mums2.github.io/mpactr/reference/filter_mispicked_ions.html","id":null,"dir":"Reference","previous_headings":"","what":"Mispicked ions filter — filter_mispicked_ions","title":"Mispicked ions filter — filter_mispicked_ions","text":"filter_mispicked_ions() identifies ions incorrectly split separate features preprocessing. filter checks feature table similar ions terms mass retention time. Peaks found similar merged single feature given merge_peaks TRUE. parameter ringwin detector saturation mass window, specific instruments, Waters Synapse G2-Si-Q-ToF, account high concentration samples. Parameter isowin isotopic mass window, accounts isotopic peaks precussor mass incorrectly assigned preprocessing. copy_object: mpactr built R6 class-system, meaning operates reference semantics data updated -place. Compared shallow copy, data pointers copied, deep copy, entire data object copied memory, changes original data object, regardless assigned new object, result changes original data object. recommend using default copy_object = FALSE makes extremely fast memory-efficient way chain mpactr filters together; however, like run filters individually traditional R style objects, can set copy_object TRUE shown filter examples.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_mispicked_ions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mispicked ions filter — filter_mispicked_ions","text":"","code":"filter_mispicked_ions(   mpactr_object,   ringwin = 0.5,   isowin = 0.01,   trwin = 0.005,   max_iso_shift = 3,   merge_peaks = TRUE,   merge_method = \"sum\",   copy_object = FALSE )"},{"path":"https://mums2.github.io/mpactr/reference/filter_mispicked_ions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mispicked ions filter — filter_mispicked_ions","text":"mpactr_object mpactr_object. See import_data(). ringwin Ringing mass window detector saturation mass window. Default = 0.5 atomic mass units (AMU). isowin Isotopic mass window. Default = 0.01 AMU. trwin numeric denoting retention time threshold assessing ions merged. Default = 0.005. max_iso_shift numeric. Default = 3. merge_peaks boolean parameter determine peaks found belong ion merged feature table. merge_method merge_peaks TRUE, method similar peaks merged. Can one \"sum\". copy_object boolean parameter allows users return copied object instead modifying object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_mispicked_ions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mispicked ions filter — filter_mispicked_ions","text":"mpactr_object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_mispicked_ions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mispicked ions filter — filter_mispicked_ions","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_mispicked_ions(data,   ringwin = 0.5,   isowin = 0.01,   trwin = 0.005,   max_iso_shift = 3,   merge_peaks = TRUE,   merge_method = \"sum\" ) #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain."},{"path":"https://mums2.github.io/mpactr/reference/filter_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the summary for a single mpactr filter. — filter_summary","title":"Return the summary for a single mpactr filter. — filter_summary","text":"filter_summary() wrapper function return summary single filter within given mpactr object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the summary for a single mpactr filter. — filter_summary","text":"","code":"filter_summary(mpactr_object, filter, group = NULL)"},{"path":"https://mums2.github.io/mpactr/reference/filter_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the summary for a single mpactr filter. — filter_summary","text":"mpactr_object mpactr object created calling import_data() function. filter name filter whose summary extracted. Must one : \"mispicked\", \"group\", \"replicability\", \"insource\". group filter = \"group\", name Biological_Group used filter.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the summary for a single mpactr filter. — filter_summary","text":"list reporting 1) compound ids compounds failed filter 2) compound ids compounds passed filter.","code":""},{"path":"https://mums2.github.io/mpactr/reference/filter_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the summary for a single mpactr filter. — filter_summary","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_mispicked_ions(data) #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain.  mispicked_summary <- filter_summary(data_filter, filter = \"mispicked\") mispicked_summary #> $failed_ions #>  [1] \"1189\" \"945\"  \"896\"  \"1210\" \"1249\" \"884\"  \"1060\" \"1008\" \"1304\" \"1271\" #> [11] \"1333\" \"937\"  \"1196\" \"1014\" \"895\"  \"1228\" \"817\"  \"853\"  \"1122\" \"938\"  #> [21] \"1145\" \"1021\" \"946\"  \"161\"  \"1032\" \"1033\" \"282\"  \"154\"  \"779\"  \"1254\" #> [31] \"1224\" \"260\"  \"264\"  \"18\"   \"1012\" \"800\"  \"1251\" \"901\"  \"969\"  \"1259\" #> [41] \"1223\" \"528\"  \"1095\" \"927\"  \"1242\" \"410\"  \"1260\" \"427\"  \"1157\" \"1206\" #> [51] \"393\"  \"1252\" \"1204\" \"975\"  \"584\"  \"1282\" \"1090\" \"1257\" \"507\"  \"1087\" #> [61] \"1153\" \"1261\" \"371\"  \"373\"  \"340\"  \"1267\" \"546\"  \"495\"  \"1289\" \"1290\" #>  #> $passed_ions #>    [1] \"1\"    \"10\"   \"100\"  \"1000\" \"1001\" \"1002\" \"1003\" \"1004\" \"1005\" \"1006\" #>   [11] \"1007\" \"1009\" \"101\"  \"1010\" \"1011\" \"1013\" \"1015\" \"1016\" \"1017\" \"1018\" #>   [21] \"1019\" \"102\"  \"1020\" \"1022\" \"1023\" \"1024\" \"1025\" \"1026\" \"1027\" \"1028\" #>   [31] \"1029\" \"103\"  \"1030\" \"1031\" \"1034\" \"1035\" \"1036\" \"1037\" \"1038\" \"1039\" #>   [41] \"104\"  \"1040\" \"1041\" \"1042\" \"1043\" \"1044\" \"1045\" \"1046\" \"1047\" \"1048\" #>   [51] \"105\"  \"1050\" \"1051\" \"1052\" \"1053\" \"1054\" \"1055\" \"1056\" \"1057\" \"1058\" #>   [61] \"1059\" \"106\"  \"1061\" \"1062\" \"1063\" \"1064\" \"1065\" \"1066\" \"1067\" \"1068\" #>   [71] \"1069\" \"107\"  \"1070\" \"1071\" \"1072\" \"1073\" \"1074\" \"1075\" \"1076\" \"1077\" #>   [81] \"1078\" \"1079\" \"108\"  \"1080\" \"1081\" \"1082\" \"1083\" \"1084\" \"1085\" \"1086\" #>   [91] \"1088\" \"1089\" \"109\"  \"1091\" \"1092\" \"1093\" \"1094\" \"1096\" \"1097\" \"1098\" #>  [101] \"1099\" \"11\"   \"110\"  \"1100\" \"1101\" \"1102\" \"1103\" \"1104\" \"1105\" \"1106\" #>  [111] \"1107\" \"1108\" \"1109\" \"111\"  \"1110\" \"1111\" \"1112\" \"1113\" \"1114\" \"1115\" #>  [121] \"1116\" \"1117\" \"1118\" \"1119\" \"112\"  \"1120\" \"1121\" \"1123\" \"1124\" \"1125\" #>  [131] \"1126\" \"1127\" \"1128\" \"1129\" \"113\"  \"1130\" \"1131\" \"1132\" \"1133\" \"1134\" #>  [141] \"1135\" \"1136\" \"1137\" \"1138\" \"1139\" \"114\"  \"1140\" \"1141\" \"1142\" \"1143\" #>  [151] \"1144\" \"1146\" \"1147\" \"1148\" \"1149\" \"115\"  \"1150\" \"1151\" \"1152\" \"1154\" #>  [161] \"1155\" \"1156\" \"1158\" \"1159\" \"116\"  \"1160\" \"1161\" \"1162\" \"1163\" \"1164\" #>  [171] \"1165\" \"1166\" \"1167\" \"1168\" \"1169\" \"117\"  \"1170\" \"1171\" \"1172\" \"1173\" #>  [181] \"1174\" \"1175\" \"1176\" \"1177\" \"1178\" \"1179\" \"118\"  \"1180\" \"1181\" \"1182\" #>  [191] \"1183\" \"1184\" \"1185\" \"1186\" \"1187\" \"1188\" \"119\"  \"1190\" \"1191\" \"1192\" #>  [201] \"1193\" \"1194\" \"1195\" \"1197\" \"1198\" \"1199\" \"12\"   \"120\"  \"1200\" \"1201\" #>  [211] \"1202\" \"1203\" \"1205\" \"1207\" \"1208\" \"1209\" \"121\"  \"1211\" \"1212\" \"1213\" #>  [221] \"1214\" \"1215\" \"1216\" \"1217\" \"1218\" \"1219\" \"122\"  \"1220\" \"1221\" \"1222\" #>  [231] \"1225\" \"1226\" \"1227\" \"1229\" \"123\"  \"1230\" \"1231\" \"1232\" \"1233\" \"1234\" #>  [241] \"1235\" \"1236\" \"1237\" \"1238\" \"1239\" \"124\"  \"1240\" \"1241\" \"1243\" \"1244\" #>  [251] \"1245\" \"1246\" \"1247\" \"125\"  \"1250\" \"1253\" \"1255\" \"1256\" \"1258\" \"126\"  #>  [261] \"1262\" \"1263\" \"1264\" \"1265\" \"1266\" \"1268\" \"1269\" \"127\"  \"1270\" \"1272\" #>  [271] \"1273\" \"1274\" \"1276\" \"1277\" \"1278\" \"1279\" \"128\"  \"1280\" \"1281\" \"1283\" #>  [281] \"1284\" \"1285\" \"1286\" \"1287\" \"1288\" \"129\"  \"1291\" \"1292\" \"1293\" \"1294\" #>  [291] \"1295\" \"1296\" \"1297\" \"1298\" \"1299\" \"13\"   \"130\"  \"1300\" \"1301\" \"1302\" #>  [301] \"1303\" \"1305\" \"1306\" \"1307\" \"1308\" \"1309\" \"131\"  \"1310\" \"1311\" \"1312\" #>  [311] \"1313\" \"1314\" \"1315\" \"1316\" \"1317\" \"1318\" \"1319\" \"132\"  \"1320\" \"1321\" #>  [321] \"1322\" \"1323\" \"1327\" \"1328\" \"1329\" \"133\"  \"1330\" \"1332\" \"1334\" \"134\"  #>  [331] \"135\"  \"136\"  \"137\"  \"138\"  \"139\"  \"14\"   \"140\"  \"141\"  \"142\"  \"143\"  #>  [341] \"144\"  \"145\"  \"146\"  \"147\"  \"148\"  \"149\"  \"15\"   \"150\"  \"151\"  \"152\"  #>  [351] \"153\"  \"155\"  \"156\"  \"157\"  \"158\"  \"159\"  \"16\"   \"160\"  \"162\"  \"163\"  #>  [361] \"164\"  \"165\"  \"166\"  \"167\"  \"168\"  \"169\"  \"17\"   \"170\"  \"171\"  \"172\"  #>  [371] \"173\"  \"174\"  \"175\"  \"176\"  \"177\"  \"178\"  \"179\"  \"180\"  \"181\"  \"182\"  #>  [381] \"183\"  \"184\"  \"185\"  \"186\"  \"187\"  \"188\"  \"189\"  \"19\"   \"190\"  \"191\"  #>  [391] \"192\"  \"193\"  \"194\"  \"195\"  \"196\"  \"197\"  \"198\"  \"199\"  \"2\"    \"20\"   #>  [401] \"200\"  \"201\"  \"202\"  \"203\"  \"204\"  \"205\"  \"206\"  \"207\"  \"208\"  \"209\"  #>  [411] \"21\"   \"210\"  \"211\"  \"212\"  \"213\"  \"214\"  \"215\"  \"216\"  \"217\"  \"218\"  #>  [421] \"219\"  \"22\"   \"220\"  \"221\"  \"222\"  \"223\"  \"224\"  \"225\"  \"226\"  \"227\"  #>  [431] \"228\"  \"229\"  \"23\"   \"230\"  \"231\"  \"232\"  \"233\"  \"234\"  \"235\"  \"236\"  #>  [441] \"237\"  \"238\"  \"239\"  \"24\"   \"240\"  \"241\"  \"242\"  \"243\"  \"244\"  \"245\"  #>  [451] \"246\"  \"247\"  \"248\"  \"249\"  \"25\"   \"250\"  \"251\"  \"252\"  \"253\"  \"254\"  #>  [461] \"255\"  \"256\"  \"257\"  \"258\"  \"259\"  \"26\"   \"261\"  \"262\"  \"263\"  \"265\"  #>  [471] \"266\"  \"267\"  \"268\"  \"269\"  \"27\"   \"270\"  \"271\"  \"272\"  \"273\"  \"274\"  #>  [481] \"275\"  \"276\"  \"277\"  \"278\"  \"279\"  \"28\"   \"280\"  \"281\"  \"283\"  \"284\"  #>  [491] \"285\"  \"286\"  \"287\"  \"288\"  \"289\"  \"29\"   \"290\"  \"291\"  \"292\"  \"293\"  #>  [501] \"294\"  \"295\"  \"296\"  \"297\"  \"298\"  \"299\"  \"3\"    \"30\"   \"300\"  \"301\"  #>  [511] \"302\"  \"303\"  \"304\"  \"305\"  \"306\"  \"307\"  \"308\"  \"309\"  \"31\"   \"310\"  #>  [521] \"311\"  \"312\"  \"313\"  \"314\"  \"315\"  \"316\"  \"317\"  \"318\"  \"319\"  \"32\"   #>  [531] \"320\"  \"321\"  \"322\"  \"323\"  \"324\"  \"325\"  \"326\"  \"327\"  \"328\"  \"329\"  #>  [541] \"33\"   \"330\"  \"331\"  \"332\"  \"333\"  \"334\"  \"335\"  \"336\"  \"337\"  \"338\"  #>  [551] \"339\"  \"34\"   \"341\"  \"342\"  \"343\"  \"344\"  \"345\"  \"346\"  \"347\"  \"348\"  #>  [561] \"349\"  \"35\"   \"350\"  \"351\"  \"352\"  \"353\"  \"354\"  \"355\"  \"356\"  \"357\"  #>  [571] \"358\"  \"359\"  \"36\"   \"360\"  \"361\"  \"362\"  \"363\"  \"364\"  \"365\"  \"366\"  #>  [581] \"367\"  \"368\"  \"369\"  \"37\"   \"370\"  \"372\"  \"374\"  \"375\"  \"376\"  \"377\"  #>  [591] \"378\"  \"379\"  \"38\"   \"380\"  \"381\"  \"382\"  \"383\"  \"384\"  \"385\"  \"386\"  #>  [601] \"387\"  \"388\"  \"389\"  \"39\"   \"390\"  \"391\"  \"392\"  \"394\"  \"395\"  \"396\"  #>  [611] \"397\"  \"398\"  \"399\"  \"4\"    \"40\"   \"400\"  \"401\"  \"402\"  \"403\"  \"404\"  #>  [621] \"405\"  \"406\"  \"407\"  \"408\"  \"409\"  \"41\"   \"411\"  \"412\"  \"413\"  \"414\"  #>  [631] \"415\"  \"416\"  \"417\"  \"418\"  \"419\"  \"42\"   \"420\"  \"421\"  \"422\"  \"423\"  #>  [641] \"424\"  \"425\"  \"426\"  \"428\"  \"429\"  \"43\"   \"430\"  \"431\"  \"432\"  \"433\"  #>  [651] \"434\"  \"435\"  \"436\"  \"437\"  \"438\"  \"439\"  \"44\"   \"440\"  \"441\"  \"442\"  #>  [661] \"443\"  \"444\"  \"445\"  \"446\"  \"447\"  \"448\"  \"449\"  \"45\"   \"450\"  \"451\"  #>  [671] \"452\"  \"453\"  \"454\"  \"455\"  \"456\"  \"457\"  \"458\"  \"459\"  \"46\"   \"460\"  #>  [681] \"461\"  \"462\"  \"463\"  \"464\"  \"465\"  \"466\"  \"467\"  \"468\"  \"469\"  \"47\"   #>  [691] \"470\"  \"471\"  \"472\"  \"473\"  \"474\"  \"475\"  \"476\"  \"477\"  \"478\"  \"479\"  #>  [701] \"48\"   \"480\"  \"481\"  \"482\"  \"483\"  \"484\"  \"485\"  \"486\"  \"487\"  \"488\"  #>  [711] \"489\"  \"49\"   \"490\"  \"491\"  \"492\"  \"493\"  \"494\"  \"496\"  \"497\"  \"498\"  #>  [721] \"499\"  \"5\"    \"50\"   \"500\"  \"501\"  \"502\"  \"503\"  \"504\"  \"505\"  \"506\"  #>  [731] \"508\"  \"509\"  \"51\"   \"510\"  \"511\"  \"512\"  \"513\"  \"514\"  \"515\"  \"516\"  #>  [741] \"517\"  \"518\"  \"519\"  \"52\"   \"520\"  \"521\"  \"522\"  \"523\"  \"524\"  \"525\"  #>  [751] \"526\"  \"527\"  \"529\"  \"53\"   \"530\"  \"531\"  \"532\"  \"533\"  \"534\"  \"535\"  #>  [761] \"536\"  \"537\"  \"538\"  \"539\"  \"54\"   \"540\"  \"541\"  \"542\"  \"543\"  \"544\"  #>  [771] \"545\"  \"547\"  \"548\"  \"549\"  \"55\"   \"550\"  \"551\"  \"552\"  \"553\"  \"554\"  #>  [781] \"555\"  \"556\"  \"557\"  \"558\"  \"559\"  \"56\"   \"560\"  \"561\"  \"562\"  \"563\"  #>  [791] \"564\"  \"565\"  \"566\"  \"567\"  \"568\"  \"569\"  \"57\"   \"570\"  \"571\"  \"572\"  #>  [801] \"573\"  \"574\"  \"575\"  \"576\"  \"577\"  \"578\"  \"579\"  \"58\"   \"580\"  \"581\"  #>  [811] \"582\"  \"583\"  \"585\"  \"586\"  \"587\"  \"588\"  \"589\"  \"59\"   \"590\"  \"591\"  #>  [821] \"592\"  \"593\"  \"594\"  \"595\"  \"596\"  \"597\"  \"598\"  \"599\"  \"6\"    \"60\"   #>  [831] \"600\"  \"601\"  \"602\"  \"603\"  \"604\"  \"605\"  \"606\"  \"607\"  \"608\"  \"609\"  #>  [841] \"61\"   \"610\"  \"611\"  \"612\"  \"613\"  \"614\"  \"615\"  \"616\"  \"617\"  \"618\"  #>  [851] \"619\"  \"62\"   \"620\"  \"621\"  \"622\"  \"623\"  \"624\"  \"625\"  \"626\"  \"627\"  #>  [861] \"628\"  \"629\"  \"63\"   \"630\"  \"631\"  \"632\"  \"633\"  \"634\"  \"635\"  \"636\"  #>  [871] \"637\"  \"638\"  \"639\"  \"64\"   \"640\"  \"641\"  \"642\"  \"643\"  \"644\"  \"645\"  #>  [881] \"646\"  \"647\"  \"648\"  \"649\"  \"65\"   \"650\"  \"651\"  \"652\"  \"653\"  \"655\"  #>  [891] \"656\"  \"657\"  \"658\"  \"659\"  \"66\"   \"660\"  \"661\"  \"662\"  \"663\"  \"664\"  #>  [901] \"665\"  \"666\"  \"667\"  \"668\"  \"669\"  \"67\"   \"670\"  \"671\"  \"672\"  \"673\"  #>  [911] \"674\"  \"675\"  \"676\"  \"677\"  \"678\"  \"679\"  \"68\"   \"680\"  \"681\"  \"682\"  #>  [921] \"683\"  \"685\"  \"686\"  \"687\"  \"688\"  \"689\"  \"69\"   \"690\"  \"691\"  \"692\"  #>  [931] \"693\"  \"694\"  \"695\"  \"696\"  \"699\"  \"7\"    \"70\"   \"700\"  \"701\"  \"702\"  #>  [941] \"703\"  \"704\"  \"705\"  \"706\"  \"707\"  \"708\"  \"71\"   \"710\"  \"711\"  \"712\"  #>  [951] \"715\"  \"716\"  \"718\"  \"719\"  \"72\"   \"721\"  \"722\"  \"723\"  \"724\"  \"726\"  #>  [961] \"727\"  \"728\"  \"729\"  \"73\"   \"732\"  \"733\"  \"734\"  \"738\"  \"739\"  \"74\"   #>  [971] \"741\"  \"742\"  \"744\"  \"745\"  \"746\"  \"748\"  \"749\"  \"75\"   \"751\"  \"753\"  #>  [981] \"758\"  \"759\"  \"76\"   \"760\"  \"761\"  \"762\"  \"763\"  \"764\"  \"765\"  \"766\"  #>  [991] \"767\"  \"768\"  \"769\"  \"77\"   \"770\"  \"771\"  \"772\"  \"773\"  \"774\"  \"775\"  #> [1001] \"776\"  \"777\"  \"778\"  \"78\"   \"780\"  \"781\"  \"782\"  \"783\"  \"784\"  \"785\"  #> [1011] \"786\"  \"787\"  \"788\"  \"789\"  \"79\"   \"790\"  \"791\"  \"792\"  \"793\"  \"794\"  #> [1021] \"795\"  \"796\"  \"797\"  \"798\"  \"799\"  \"8\"    \"80\"   \"801\"  \"802\"  \"803\"  #> [1031] \"804\"  \"805\"  \"806\"  \"807\"  \"808\"  \"809\"  \"81\"   \"810\"  \"811\"  \"812\"  #> [1041] \"813\"  \"814\"  \"815\"  \"816\"  \"818\"  \"819\"  \"82\"   \"820\"  \"821\"  \"822\"  #> [1051] \"823\"  \"824\"  \"825\"  \"826\"  \"827\"  \"828\"  \"829\"  \"83\"   \"830\"  \"831\"  #> [1061] \"832\"  \"833\"  \"834\"  \"835\"  \"836\"  \"837\"  \"838\"  \"839\"  \"84\"   \"840\"  #> [1071] \"841\"  \"842\"  \"843\"  \"844\"  \"845\"  \"846\"  \"847\"  \"848\"  \"849\"  \"85\"   #> [1081] \"850\"  \"851\"  \"852\"  \"854\"  \"855\"  \"856\"  \"857\"  \"858\"  \"859\"  \"86\"   #> [1091] \"860\"  \"861\"  \"862\"  \"863\"  \"864\"  \"865\"  \"866\"  \"867\"  \"868\"  \"869\"  #> [1101] \"87\"   \"870\"  \"871\"  \"872\"  \"873\"  \"874\"  \"875\"  \"876\"  \"877\"  \"878\"  #> [1111] \"879\"  \"88\"   \"880\"  \"881\"  \"882\"  \"883\"  \"885\"  \"886\"  \"887\"  \"888\"  #> [1121] \"889\"  \"89\"   \"890\"  \"891\"  \"892\"  \"893\"  \"894\"  \"897\"  \"898\"  \"899\"  #> [1131] \"9\"    \"90\"   \"900\"  \"902\"  \"903\"  \"904\"  \"905\"  \"906\"  \"907\"  \"908\"  #> [1141] \"909\"  \"91\"   \"910\"  \"911\"  \"912\"  \"913\"  \"914\"  \"915\"  \"916\"  \"917\"  #> [1151] \"918\"  \"919\"  \"92\"   \"920\"  \"921\"  \"922\"  \"923\"  \"924\"  \"925\"  \"926\"  #> [1161] \"928\"  \"929\"  \"93\"   \"930\"  \"931\"  \"932\"  \"933\"  \"934\"  \"935\"  \"936\"  #> [1171] \"939\"  \"94\"   \"940\"  \"941\"  \"942\"  \"943\"  \"944\"  \"947\"  \"948\"  \"949\"  #> [1181] \"95\"   \"950\"  \"951\"  \"952\"  \"953\"  \"954\"  \"955\"  \"956\"  \"957\"  \"958\"  #> [1191] \"959\"  \"96\"   \"960\"  \"961\"  \"962\"  \"963\"  \"964\"  \"965\"  \"966\"  \"967\"  #> [1201] \"968\"  \"97\"   \"970\"  \"971\"  \"972\"  \"973\"  \"974\"  \"976\"  \"977\"  \"978\"  #> [1211] \"979\"  \"98\"   \"980\"  \"981\"  \"982\"  \"983\"  \"984\"  \"985\"  \"986\"  \"987\"  #> [1221] \"988\"  \"989\"  \"99\"   \"990\"  \"991\"  \"992\"  \"993\"  \"994\"  \"995\"  \"996\"  #> [1231] \"997\"  \"998\"  \"999\"  #>"},{"path":"https://mums2.github.io/mpactr/reference/get_cv_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CV values. — get_cv_data","title":"Get CV values. — get_cv_data","text":"get_cv_data() wrapper function return cv (coefficient variation) calculated filter_cv().","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_cv_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CV values. — get_cv_data","text":"","code":"get_cv_data(mpactr_object)"},{"path":"https://mums2.github.io/mpactr/reference/get_cv_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CV values. — get_cv_data","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_cv_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CV values. — get_cv_data","text":"data.table reporting mean median coefficient variation input ion.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_cv_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CV values. — get_cv_data","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_cv(data,   cv_threshold = 0.01,   cv_param = \"median\" ) #> ℹ Parsing 1303 peaks for replicability across technical replicates. #> ✔ 1298 ions failed the cv_filter filter, 5 ions remain.  cv <- get_cv_data(data_filter) head(cv) #>    Compound    mean_cv  median_cv #>      <char>      <num>      <num> #> 1:        1 0.21346035 0.05760617 #> 2:        2 0.91799997 0.91799997 #> 3:        3 0.90848851 0.90848851 #> 4:        4 0.06782583 0.06782583 #> 5:        5 0.02727037 0.02727037 #> 6:        6 0.09005716 0.09005716"},{"path":"https://mums2.github.io/mpactr/reference/get_group_averages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get groups averages. — get_group_averages","title":"Get groups averages. — get_group_averages","text":"get_group_averages() wrapper function return group averages filtered peak table.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_group_averages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get groups averages. — get_group_averages","text":"","code":"get_group_averages(mpactr_object)"},{"path":"https://mums2.github.io/mpactr/reference/get_group_averages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get groups averages. — get_group_averages","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_group_averages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get groups averages. — get_group_averages","text":"data.table reporting average relative standard deviation across biological groups technical replicates within group.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_group_averages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get groups averages. — get_group_averages","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_group(data, group_to_remove = \"Blanks\") #> ℹ Parsing 1303 peaks based on the sample group: Blanks. #> ℹ Argument remove_ions is: TRUE.Removing peaks from Blanks. #> ✔ 796 ions failed the Blanks filter, 507 ions remain.  group_averages <- get_group_averages(data_filter) head(group_averages) #>    Compound  Biological_Group    average    BiolRSD Bioln    techRSD techn #>      <char>            <char>      <num>      <num> <int>      <num> <num> #> 1:     1000 ANG18 monoculture      0.000         NA     3         NA     3 #> 2:     1000 ANGDT monoculture   3762.133 0.01990561     3 0.01990561     3 #> 3:     1000            Blanks      0.000         NA     3         NA     3 #> 4:     1000         Coculture      0.000         NA     3         NA     3 #> 5:     1000   JC1 monoculture      0.000         NA     3         NA     3 #> 6:     1000  JC28 monoculture 182681.783 0.01643330     3 0.01643330     3"},{"path":"https://mums2.github.io/mpactr/reference/get_meta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the meta_data data.table from the mpactr object. — get_meta_data","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"get_meta_data() wrapper function return meta data object given mpactr object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_meta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"","code":"get_meta_data(mpactr_object)"},{"path":"https://mums2.github.io/mpactr/reference/get_meta_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_meta_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"data.table.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_meta_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  meta_data <- get_meta_data(data)"},{"path":"https://mums2.github.io/mpactr/reference/get_peak_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the peak table data.table from the mpactr object. — get_peak_table","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"get_peak_table() wrapper function return peak table object given mpactr object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_peak_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"","code":"get_peak_table(mpactr_object)"},{"path":"https://mums2.github.io/mpactr/reference/get_peak_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_peak_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"data.table.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_peak_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  peak_table <- get_peak_table(data)"},{"path":"https://mums2.github.io/mpactr/reference/get_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the input peak table from mpactr object. — get_raw_data","title":"Return the input peak table from mpactr object. — get_raw_data","text":"get_raw_data wrapper function return meta data object given mpactr object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the input peak table from mpactr object. — get_raw_data","text":"","code":"get_raw_data(mpactr_object)"},{"path":"https://mums2.github.io/mpactr/reference/get_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the input peak table from mpactr object. — get_raw_data","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the input peak table from mpactr object. — get_raw_data","text":"data.table.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the input peak table from mpactr object. — get_raw_data","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  raw_data <- get_raw_data(data)"},{"path":"https://mums2.github.io/mpactr/reference/get_similar_ions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get similar ion groups. — get_similar_ions","title":"Get similar ion groups. — get_similar_ions","text":"get_similar_ions() wrapper function return similar ion groups determined filter_mispicked_ions().","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_similar_ions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get similar ion groups. — get_similar_ions","text":"","code":"get_similar_ions(mpactr_object)"},{"path":"https://mums2.github.io/mpactr/reference/get_similar_ions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get similar ion groups. — get_similar_ions","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_similar_ions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get similar ion groups. — get_similar_ions","text":"data.table reporting main ion found similar filter_mispicked_ions().","code":""},{"path":"https://mums2.github.io/mpactr/reference/get_similar_ions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get similar ion groups. — get_similar_ions","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_mispicked_ions(data) #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain.  mispicked_ion_groups <- get_similar_ions(data_filter) mispicked_ion_groups #>     main_ion similar_ions #>       <char>       <list> #>  1:     1188         1189 #>  2:      939          945 #>  3:      898          896 #>  4:     1214         1210 #>  5:     1253         1249 #>  6:      886          884 #>  7:     1059         1060 #>  8:     1011         1008 #>  9:     1305         1304 #> 10:     1272         1271 #> 11:     1332         1333 #> 12:      944          937 #> 13:     1195         1196 #> 14:     1022         1014 #> 15:      897          895 #> 16:     1233         1228 #> 17:      811          817 #> 18:      851          853 #> 19:     1123         1122 #> 20:      951          938 #> 21:     1146         1145 #> 22:     1019         1021 #> 23:      941          946 #> 24:      878          161 #> 25:     1030    1032,1033 #> 26:     1009          282 #> 27:      153          154 #> 28:      785          779 #> 29:     1256         1254 #> 30:     1216         1224 #> 31:      259          260 #> 32:      263          264 #> 33:      770           18 #> 34:     1004         1012 #> 35:      784          800 #> 36:     1258         1251 #> 37:      903          901 #> 38:      248          969 #> 39:      586         1259 #> 40:     1222         1223 #> 41:      525          528 #> 42:     1103         1095 #> 43:      918          927 #> 44:     1243         1242 #> 45:      411          410 #> 46:     1264         1260 #> 47:      426     427,1157 #> 48:      529         1206 #> 49:      395          393 #> 50:     1247         1252 #> 51:     1203         1204 #> 52:      973          975 #> 53:      583          584 #> 54:     1281         1282 #> 55:     1091         1090 #> 56:     1262         1257 #> 57:      508          507 #> 58:     1089         1087 #> 59:     1155         1153 #> 60:     1263         1261 #> 61:      372      371,373 #> 62:      342          340 #> 63:     1266         1267 #> 64:      545          546 #> 65:      496          495 #> 66:     1288    1289,1290 #>     main_ion similar_ions"},{"path":"https://mums2.github.io/mpactr/reference/import_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data into an mpactr object. — import_data","title":"Import data into an mpactr object. — import_data","text":"import_data() takes two file paths, one pre-processed feature table one sample metadata. files .csv.","code":""},{"path":"https://mums2.github.io/mpactr/reference/import_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data into an mpactr object. — import_data","text":"","code":"import_data(peak_table, meta_data, format = \"none\")"},{"path":"https://mums2.github.io/mpactr/reference/import_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data into an mpactr object. — import_data","text":"peak_table file path valid https url feature table file. meta_data file path meta_data file data.frame. format expected exported type peak table, can one \"Progenesis\", \"Metaboscape\", \"None\".","code":""},{"path":"https://mums2.github.io/mpactr/reference/import_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data into an mpactr object. — import_data","text":"mpactr_object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/import_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import data into an mpactr object. — import_data","text":"mpactr requires peak table meta data input. Files expected comma separated files (.csv). peak_table: peak table rows expected compounds. mpactr supports import feature table files multiple tools format argument. Currently supported value format \"Progenesis\", \"Metaboscape\", \"None\". format = \"Progensis\" allows users provide feature table exported Progenesis. export compatable peak table Progenesis, navigate Review Compounds tab File -> Export Compound Measurements. Select following properties: Compound, m/z, Retention time (min), Raw abundance click ok. format = \"Metaboscape\" allows users provide feature table exported Metaboscape default settings. import function save raw peak table mpactr_object store formatted peak table filtering. Reformatting includes selecting \"FEATURE_ID\", \"RT\", \"PEPMASS\", sample columns. Sample columns determined \"Injection\" column meta_data (see ). \"PEPMASS\" converted m/z using \"ADDUCT\" column compound metadata columns renamed mpactr. format = \"None\" allows users provide feature table file expected format. can useful file another tool want manually format R. table rows expected individual features, columns compound metadata samples. feature table must compound metadata columns \"Compound\", \"mz\", \"rt\". \"Compound\" compound id, can numeric character. \"mz\" compound m/z, numeric. \"rt\" retention time, mintues, numeric. remaining columns samples, match names \"Injection\" column meta_data file. 2. meta_data: table sample information. Either file path data.frame can supplied. minimum following columns expected: \"Injection\", \"Sample_Code\", \"Biological_Group\". \"Injection\" sample name expected match sample column names peak_table. \"Sample_Code\" id technical replicate groups. \"Biological_Group\" id biological replicate groups. sample metadata can added, encouraged downstream analysis following filtering mpactr.","code":""},{"path":"https://mums2.github.io/mpactr/reference/import_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data into an mpactr object. — import_data","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  meta_data <- read.csv(example(\"metadata.csv\")) data <- import_data(example(\"coculture_peak_table.csv\"),   meta_data,   format = \"Progenesis\" )"},{"path":"https://mums2.github.io/mpactr/reference/mpactr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mpactr: Correction of Preprocessed MS Data — mpactr-package","title":"mpactr: Correction of Preprocessed MS Data — mpactr-package","text":"fast tool correction preprocessed tandem MS/MS features. 'R' implementation 'python' program Metabolomics Peak Analysis Computational Tool ('MPACT') (Robert M. Samples, Sara P. Puckett, Marcy J. Balunas (2023) doi:10.1021/acs.analchem.2c04632 ). Filters package serve address common errors MS/MS preprocessing, including: (1) isotopic patterns incorrectly split preprocessing, (2) features present solvent blanks due carryover samples, (3) features whose abundance greater user-defined abundance threshold specific group samples, example media blanks, (4) ions inconsistent technical replicates, (5) -source fragment ions created ionization fragmentation tandem MS/MS workflow.","code":""},{"path":[]},{"path":"https://mums2.github.io/mpactr/reference/mpactr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mpactr: Correction of Preprocessed MS Data — mpactr-package","text":"Maintainer: Patrick Schloss pschloss@umich.edu (ORCID) [copyright holder] Authors: Allison Mason masonar@umich.edu (ORCID) Gregory Johnson grejoh@umich.edu","code":""},{"path":"https://mums2.github.io/mpactr/reference/plot_qc_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Filtering Summary as Tree Map — plot_qc_tree","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"plot_qc_tree() visualizes filtering summary treemap. Ion status (see qc_summary()) reported percentage pre-filtered ions.","code":""},{"path":"https://mums2.github.io/mpactr/reference/plot_qc_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"","code":"plot_qc_tree(mpactr_object)"},{"path":"https://mums2.github.io/mpactr/reference/plot_qc_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"mpactr_object mpactr_object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/plot_qc_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"tree map plot class ggplot.","code":""},{"path":"https://mums2.github.io/mpactr/reference/plot_qc_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_mispicked_ions(data,   ringwin = 0.5,   isowin = 0.01,   trwin = 0.005,   max_iso_shift = 3,   merge_peaks = TRUE ) #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain.  plot_qc_tree(data_filter)"},{"path":"https://mums2.github.io/mpactr/reference/qc_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Fitering — qc_summary","title":"Summary of Fitering — qc_summary","text":"Parses mpactr object exracts summary applied filters. Specifically, fate input ion reported ion status. Status options : Passed, mispicked, group, replicability, insouce. status Passed ions returned ions passed applied filters therefore expected high quaility ions. Ions tagged group, mispicked, replicability, ionsource removed correspoding filter.","code":""},{"path":"https://mums2.github.io/mpactr/reference/qc_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Fitering — qc_summary","text":"","code":"qc_summary(mpactr_object)"},{"path":"https://mums2.github.io/mpactr/reference/qc_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Fitering — qc_summary","text":"mpactr_object mpactr_object.","code":""},{"path":"https://mums2.github.io/mpactr/reference/qc_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Fitering — qc_summary","text":"data.table reporting number high quality ions (\"Passed\") filter removed.","code":""},{"path":"https://mums2.github.io/mpactr/reference/qc_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Fitering — qc_summary","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),   example(\"metadata.csv\"),   format = \"Progenesis\" )  data_filter <- filter_mispicked_ions(data,   ringwin = 0.5,   isowin = 0.01,   trwin = 0.005,   max_iso_shift = 3,   merge_peaks = TRUE ) #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain.  summary <- qc_summary(data_filter) summary #>          status compounds #>          <char>    <char> #>    1:    Passed         1 #>    2:    Passed        10 #>    3:    Passed       100 #>    4:    Passed      1000 #>    5:    Passed      1001 #>   ---                     #> 1299: mispicked      1267 #> 1300: mispicked       546 #> 1301: mispicked       495 #> 1302: mispicked      1289 #> 1303: mispicked      1290"},{"path":"https://mums2.github.io/mpactr/news/index.html","id":"mpactr-010","dir":"Changelog","previous_headings":"","what":"mpactr 0.1.0","title":"mpactr 0.1.0","text":"CRAN release: 2024-09-10","code":""},{"path":"https://mums2.github.io/mpactr/news/index.html","id":"mpactr-010-1","dir":"Changelog","previous_headings":"","what":"mpactr 0.1.0","title":"mpactr 0.1.0","text":"CRAN release: 2024-09-10 Initial CRAN submission. Contains four main filters: filter_mispicked_ions(), filter_group(), filter_cv(), filter_insource_ions() correction tandem MS/MS peaks.","code":""}]
